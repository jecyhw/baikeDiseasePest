/* 
 LobsterPot-HTML5-PivotViewer v0.9.23 (2013-04-24) 
 Copyright Â© 2013 LobsterPot Solutions - www.lobsterpot.com.au. All rights reserved 
 enquiries@lobsterpot.com.au 
 */
var PivotViewer = PivotViewer || {};
PivotViewer.FacetTypes = {}, PivotViewer.Models = {}, PivotViewer.Models.Loaders = {}, PivotViewer.Utils = {}, PivotViewer.Utils.Facets = {}, PivotViewer.Search = {}, PivotViewer.Views = {};
var Debug = Debug || {};
Debug.ConsoleFunction = function (e) {
    return window.console && window.console[e] ? function () {
        typeof debug != "undefined" && debug === !0 && (window.console[e].call ? window.console[e].call(window.console, arguments) : arguments.length > 0 && window.console[e](arguments[0]))
    } : $.noop
}, Debug.Trace = Debug.ConsoleFunction("trace"), Debug.Log = Debug.ConsoleFunction("log"), Debug.Info = Debug.ConsoleFunction("info"), Debug.Warn = Debug.ConsoleFunction("warn"), Debug.Error = Debug.ConsoleFunction("error"), Debug.Alert = function (e) {
    Debug.Error("Debug.Alert", arguments), window.alert(e)
}, window.requestAnimFrame = function () {
    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (e) {
            window.setTimeout(e, 1e3 / 60)
        }
}(), PivotViewer.Utils.Days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], PivotViewer.Utils.ShortDays = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], PivotViewer.Utils.MonthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], PivotViewer.Utils.ShortMonthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], PivotViewer.Utils.EscapeMetaCharsRx = /([ \s!"#$%&'()*+,.\/:;<=>?@\[\\\]\^`{|}~])/g, PivotViewer.Utils.EscapeMetaChars = function (e) {
    return e.replace(PivotViewer.Utils.EscapeMetaCharsRx, "\\$1")
}, PivotViewer.Utils.EscapeItemIdRx = /[^\S\-:.]/gi, PivotViewer.Utils.EscapeItemId = function (e) {
    return e.replace(PivotViewer.Utils.EscapeItemIdRx, "-")
}, PivotViewer.Utils.RemoveSpecialChars = function (e) {
    return e.replace(/\n/gi, "").replace(/\r/gi, "").replace(/\t/gi, "").replace(/&#xD;/gi, "").replace(/&#x9;/gi, "").replace(/&#xA;/gi, "")
}, PivotViewer.Utils.EscapeSpaces = function (e) {
    return e.replace(/ /g, "|")
}, PivotViewer.Utils.UnescapeSpaces = function (e) {
    return e.replace(/\|/g, " ")
}, PivotViewer.Utils.Facets.EscapeItemName = PivotViewer.Utils.EscapeSpaces, PivotViewer.Utils.Facets.UnescapeItemName = PivotViewer.Utils.UnescapeSpaces, PivotViewer.Utils.Facets.EscapeItemValue = PivotViewer.Utils.EscapeSpaces, PivotViewer.Utils.Facets.UnescapeItemValue = PivotViewer.Utils.UnescapeSpaces, PivotViewer.Utils.Facets.CreateItemId = function (e, t) {
    var n = PivotViewer.Utils.Facets.EscapeItemValue($.trim(PivotViewer.Utils.RemoveSpecialChars(t))), r = PivotViewer.Utils.Facets.EscapeItemName(e), i = PivotViewer.Utils.EscapeItemId("pv-facet-item-" + r + "__" + n);
    return i
}, PivotViewer.Utils.Now = function () {
    return Date.now ? Date.now() : (new Date).getTime()
}, PivotViewer.Utils.Min = function (e) {
    var t = e[0];
    for (var n = 0, r = e.length; n < r; n++)t = t > e[n] ? e[n] : t;
    return t
}, PivotViewer.Utils.Max = function (e) {
    var t = e[0];
    for (var n = 0, r = e.length; n < r; n++)t = t < e[n] ? e[n] : t;
    return t
}, PivotViewer.Utils.Histogram = function (e) {
    if (!e instanceof Array)return null;
    var t = PivotViewer.Utils.Min(e), n = PivotViewer.Utils.Max(e);
    if (t === n)return {
        Histogram: [[t]],
        Min: t,
        Max: t,
        MinActual: t,
        MaxActual: n,
        BinCount: 1,
        StepSize: 0,
        Precision: 0
    };
    var r = (Math.floor(Math.pow(2 * e.length, 1 / 3)) + 1) * 2;
    r > 10 && (r = 10);
    var i = (n - t) / r, s = 0, o = t, u = n;
    if (i > 0) {
        var a = Math.floor(Math.log(i) / Math.LN10), f = 0, l = i / Math.pow(10, a), c = l;
        l > 5 ? (c = 10, f = 1) : l > 2.5 ? c = 5 : l > 2 ? (c = 2.5, f = -1) : c = 2, c *= Math.pow(10, a), o = Math.floor(t / c) * c, u = Math.ceil(n / c) * c;
        var h = (u - o) / c;
        r = h, i = c, s = a + f
    }
    var p = [];
    var p = [];
    for (var d = 0; d < r; d++) {
        var v = o + d * i, m = o + (d + 1) * i;
        p.push([]);
        for (var g = 0, y = e.length; g < y; g++)v <= e[g] && m > e[g] && p[d].push(e[g])
    }
    return {Histogram: p, Min: o, Max: u, MinActual: t, MaxActual: n, BinCount: r, StepSize: i, Precision: s}
}, PivotViewer.Utils.FormatDate = function (e, t) {
    var n = [];
    for (var r = 0; r < t.length; r++)n.length > 0 && n[n.length - 1][0] == t[r] ? n[n.length - 1] += t[r] : n.push(t[r]);
    var i = "";
    for (var s in n)n[s] == "d" ? i += e.getDate().toString() : n[s] == "dd" ? i += e.getDate() < 10 ? "0" + e.getDate().toString() : e.getDate().toString() : n[s] == "ddd" ? i += PivotViewer.Utils.ShortDays[e.getDay()] : n[s] == "dddd" ? i += PivotViewer.Utils.Days[e.getDay()] : n[s] == "M" ? i += e.getMonth().toString() : n[s] == "MM" ? i += e.getMonth() < 9 ? "0" + (e.getMonth() + 1) : (e.getMonth() + 1).toString() : n[s] == "MMM" ? i += PivotViewer.Utils.ShortMonthNames[e.getMonth()] : n[s] == "MMMM" ? i += PivotViewer.Utils.MonthNames[e.getMonth()] : n[s] == "y" ? i += e.getFullYear().toString()[3] : n[s] == "yy" ? i += e.getFullYear().toString().substr(2, 2) : n[s] == "yyyy" ? i += e.getFullYear().toString() : i += n[s];
    return i
}, PivotViewer.Utils.GetNumberOrdinal = function (e) {
    var t = (e | 0) % 100;
    return e + (t > 3 && t < 21 ? "th" : ["th", "st", "nd", "rd"][t % 10] || "th")
}, PivotViewer.Utils.Throttle = function (e, t) {
    var n = null;
    return function () {
        var r = this, i = arguments;
        clearTimeout(n), n = setTimeout(function () {
            e.apply(r, i)
        }, t)
    }
}, PivotViewer.Utils.PreventMultipleThrottle = function (e, t, n) {
    var r = null;
    return function () {
        var i = PivotViewer.Utils.Now();
        r != null && i - r >= n && (r = null), r == null && (r = i, e.apply(this, arguments)), t.apply(this, null)
    }
}, PivotViewer.Utils.GetInstancesOfType = function (e, t, n) {
    var r = [];
    for (var i in e) {
        if ($.inArray(i, n) >= 0)continue;
        if (typeof e[i] == "object") {
            var s = PivotViewer.Utils.GetInstancesOfType(e[i], t);
            for (var o = 0; o < s.length; o++)r.push(s[o])
        } else e[i] && e[i].prototype && e[i].prototype instanceof t && r.push(e[i])
    }
    return r
}, PivotViewer.Utils.ArrayIntesect = function (e, t) {
    var n = new Array;
    while (e.length > 0 && t.length > 0)e[0] < t[0] ? e.shift() : e[0] > t[0] ? t.shift() : (n.push(e.shift()), t.shift());
    return n
}, function () {
    var e = !1, t = /xyz/.test(function () {
        xyz
    }) ? /\b_super\b/ : /.*/;
    Object.subClass = function (n) {
        function o() {
            !e && this.init && this.init.apply(this, arguments)
        }

        var r = this.prototype;
        e = !0;
        var i = new this;
        e = !1;
        for (var s in n)i[s] = typeof n[s] == "function" && typeof r[s] == "function" && t.test(n[s]) ? function (e, t) {
            return function () {
                var n = this._super;
                this._super = r[e];
                var i = t.apply(this, arguments);
                return this._super = n, i
            }
        }(s, n[s]) : n[s];
        return o.prototype = i, o.constructor = o, o.subClass = arguments.callee, o
    }
}(), PivotViewer.FacetTypes.FacetTypeController = Object.subClass({
    init: function (e) {
        this.Types = {};
        var t = PivotViewer.Utils.GetInstancesOfType(window.PivotViewer.FacetTypes, PivotViewer.FacetTypes.IFacetType);
        for (var n = 0; n < t.length; n++)this.Types[t[n].prototype.TypeName] = new t[n](e)
    }
}), PivotViewer.FacetTypes.IFacetType = Object.subClass({
    init: function (e) {
    }, TypeName: "", AddCustomSort: function (e) {
    }, GetSelectedItems: function (e) {
    }, FilterFacet: function (e, t) {
    }, ClearSelected: function (e) {
    }, ToStringArray: function (e, t) {
        return []
    }
}), PivotViewer.FacetTypes.Boolean = PivotViewer.FacetTypes.IFacetType.subClass({
    init: function () {
        this.facetItemEmptyValueString = "(no info)", this.currentSelection = null
    }, TypeName: "Boolean", GetSelectedItems: function (e) {
        var t = [], n = [], r = $('.pv-facet-facetitem:checked[facetType="Boolean"]');
        for (var i = 0; i < r.length; i++) {
            var s = r.eq(i), o = PivotViewer.Utils.Facets.UnescapeItemName(s.attr("itemfacet")), u = PivotViewer.Utils.Facets.UnescapeItemValue(s.attr("itemvalue")), a = !1;
            for (var f = 0; f < n.length; f++)n[f].facet == o && (n[f].facetValue.push(u), a = !0);
            a || n.push({
                facet: o,
                facetValue: [u]
            }), $("#pv-cat-heading-" + PivotViewer.Utils.EscapeMetaChars(PivotViewer.Utils.EscapeItemId(o)) + " > .pv-filterpanel-accordion-heading-clear").css("visibility", "visible")
        }
        var l = {};
        for (var i = 0; i < e.length; i++) {
            var c = e[i];
            if (n.length === 0) {
                l[c.Id] = 0;
                continue
            }
            for (var h = 0; h < n.length; h++) {
                var p = n[h], d = c.FindFacetByName(p.facet);
                if (d)for (var v = 0; v < d.length; v++)for (var m = 0; m < p.facetValue.length; m++)d[v].Value == p.facetValue[m] && (l[c.Id] ? l[c.Id]++ : l[c.Id] = 1); else for (var m = 0, g = p.facetValue.length; m < g; m++)p.facetValue[m] === this.facetItemEmptyValueString && (l[c.Id] ? l[c.Id]++ : l[c.Id] = 1)
            }
        }
        for (var i in l)l[i] == n.length && t.push(i);
        return t.sort()
    }, FilterFacet: function (e, t) {
        var n = {};
        for (var r = 0; r < t.length; r++) {
            var i = t[r], s = i.FindFacetByName(e);
            if (s != undefined)for (var o = 0; o < s.length; o++) {
                var u = s[o].Value ? "Yes" : "No", a = PivotViewer.Utils.Facets.CreateItemId(e, u);
                n[a] ? n[a].count++ : n[a] = {value: u, count: 1}
            }
        }
        var f = PivotViewer.Utils.EscapeItemId(e), l = PivotViewer.Utils.EscapeMetaChars(f), c = $("#pv-cat-" + l), h = {facets: []};
        for (var r in n)h.facets.push({
            itemId: r,
            itemValue: n[r].value,
            escapedItemFacetName: PivotViewer.Utils.Facets.EscapeItemName(e),
            escapedItemFacetValue: PivotViewer.Utils.Facets.EscapeItemValue(n[r].value),
            baseContentPath: "",
            count: n[r].count
        });
        stringfacets = ich.pv_template_facettype_string(h), c.find("ul").empty(), c.append(stringfacets)
    }, ClearSelected: function (e) {
        var t = $('.pv-facet-facetitem:checked[itemfacet="' + PivotViewer.Utils.Facets.EscapeItemName(e) + '"]');
        for (var n = 0; n < t.length; n++)$(t[n]).removeAttr("checked")
    }, ToStringArray: function (e) {
        return []
    }
}), PivotViewer.FacetTypes.DateTime = PivotViewer.FacetTypes.IFacetType.subClass({
    init: function (e) {
        this.baseContentPath = e, this.currentSelection = null, $(document).on("click", ".pv-facet-facetitem-date", function (e) {
            var t = PivotViewer.Utils.Facets.UnescapeItemName(this.getAttribute("itemfacet"));
            $.publish("/PivotViewer/Collection/Filter", [{facet: t}])
        }), $(document).on("click", ".pv-facet-facetitem-date-picker", function (e) {
            $(this).scroller("show")
        })
    }, TypeName: "DateTime", GetSelectedItems: function (e) {
        var t = [];
        this.currentSelection = this.GetCheckedValues();
        var n = 0;
        for (var r in this.currentSelection)$("#pv-cat-heading-" + PivotViewer.Utils.EscapeMetaChars(PivotViewer.Utils.EscapeItemId(r)) + " > .pv-filterpanel-accordion-heading-clear").css("visibility", "visible"), n++;
        var i = {};
        for (var r = 0; r < e.length; r++) {
            var s = e[r];
            if (n === 0) {
                i[s.Id] = 0;
                continue
            }
            for (var o in this.currentSelection) {
                var u = s.FindFacetByName(o);
                if (u)for (var a = 0, f = u.length; a < f; a++)for (var l = 0, c = this.currentSelection[o].length; l < c; l++)u[a].Value >= this.currentSelection[o][l].startRange && u[a].Value <= this.currentSelection[o][l].endRange && (i[s.Id] ? i[s.Id]++ : i[s.Id] = 1)
            }
        }
        for (var r in i)i[r] == n && t.push(r);
        return t.sort()
    }, FilterFacet: function (e, t) {
        var n = [];
        for (var r = 0; r < t.length; r++) {
            var i = t[r], s = i.FindFacetByName(e);
            if (s)for (var o = 0; o < s.length; o++)n.push(s[o].Value)
        }
        var u = {};
        u.FacetName = e, u.EscapedFacetName = PivotViewer.Utils.Facets.EscapeItemName(u.FacetName), u.BaseContentPath = this.baseContentPath, u.CreateDateTimeFacet = function (t) {
            var n = PivotViewer.Utils.EscapeItemId(this.FacetName), r = PivotViewer.Utils.EscapeMetaChars(n), i = $("#pv-cat-" + r);
            i.empty(), t = t.sort(function (e, t) {
                return e < t ? -1 : e > t ? 1 : 0
            });
            var s = t[0].getFullYear(), o = t[t.length - 1].getFullYear();
            o - s == 0 ? (i.append(this.CreateDateTimeList(t, "Month")), i.append("<div class='pv-filterpanel-dateseparator'></div>"), i.append(this.CreateDateTimeList(t, "Date"))) : o - s > 0 && o - s < 11 ? (i.append(this.CreateDateTimeList(t, "Year")), i.append("<div class='pv-filterpanel-dateseparator'></div>"), i.append(this.CreateDateTimeList(t, "Month"))) : o - s > 10 && o - s < 101 ? (i.append(this.CreateDateTimeList(t, "Decade")), i.append("<div class='pv-filterpanel-dateseparator'></div>"), i.append(this.CreateDateTimeList(t, "Year"))) : o - s > 101 && (i.append(this.CreateDateTimeList(t, "Century")), i.append("<div class='pv-filterpanel-dateseparator'></div>"), i.append(this.CreateDateTimeList(t, "Decade"))), i.append("<div class='pv-filterpanel-dateseparator'></div>"), i.append(this.CreateCustomDateRange(t)), i.find(".pv-facet-facetitem-date-picker").scroller({
                preset: "date",
                theme: "default",
                display: "modal",
                mode: "scroller",
                dateOrder: "mmD ddyy",
                dateFormat: this._dateFormat,
                minDate: t[0],
                maxDate: t[t.length - 1],
                onClose: function (t, n) {
                    var r = $(this), i = r.scroller("getDate");
                    r.children()[1].innerHTML = PivotViewer.Utils.FormatDate(i, "MMM d yyyy");
                    var s = r.parent().find("input"), o = r.hasClass("pv-facet-facetitem-date-picker-from") ? "daterangestart" : "daterangeend";
                    s.attr(o, PivotViewer.Utils.FormatDate(i, "yyyy-MM-dd")), s.attr("checked", "checked"), $.publish("/PivotViewer/Collection/Filter", [{facet: e}])
                }
            }), i.find(".pv-facet-facetitem-date-picker-from").scroller("setDate", t[0], !1), i.find(".pv-facet-facetitem-date-picker-to").scroller("setDate", t[t.length - 1], !1)
        }, u.CreateDateTimeList = function (e, t) {
            var n = [];
            for (var r = 0; r < e.length; r++) {
                var i = "";
                if (t == "Date")i = {
                    Name: PivotViewer.Utils.FormatDate(e[r], "MMM d yyyy"),
                    StartRange: PivotViewer.Utils.FormatDate(e[r], "yyyy-MM-dd"),
                    EndRange: PivotViewer.Utils.FormatDate(e[r], "yyyy-MM-dd"),
                    Count: 1
                }; else if (t == "Month") {
                    var s = new Date(e[r].getFullYear(), e[r].getMonth(), 1, 0, 0, 0, 0), o = new Date(e[r].getFullYear(), e[r].getMonth() + 1, 1, 0, 0, 0, 0);
                    o.setDate(o.getDate() - 1), i = {
                        Name: PivotViewer.Utils.FormatDate(e[r], "MMMM yyyy"),
                        StartRange: PivotViewer.Utils.FormatDate(s, "yyyy-MM-dd"),
                        EndRange: PivotViewer.Utils.FormatDate(o, "yyyy-MM-dd"),
                        Count: 1
                    }
                } else if (t == "Year") {
                    var u = e[r].getFullYear() + "-01-01", a = e[r].getFullYear() + "-12-31";
                    i = {Name: e[r].getFullYear().toString(), StartRange: u, EndRange: a, Count: 1}
                } else if (t == "Decade") {
                    var u = Math.floor(e[r].getFullYear() / 10) * 10 + "-01-01", a = Math.floor(e[r].getFullYear() / 10) + "9-12-31";
                    i = {Name: Math.floor(e[r].getFullYear() / 10) * 10 + "s", StartRange: u, EndRange: a, Count: 1}
                } else if (t == "Century") {
                    var u = Math.floor(e[r].getFullYear() / 100) * 100 + "-01-01", a = Math.floor(e[r].getFullYear() / 100) + "99-12-31";
                    i = {
                        Name: PivotViewer.Utils.GetNumberOrdinal(Math.floor(e[r].getFullYear() / 100) + 1) + " century",
                        StartRange: u,
                        EndRange: a,
                        Count: 1
                    }
                }
                n[i.Name] == undefined ? n[i.Name] = i : n[i.Name].Count++
            }
            var f = "<ul class='pv-filterpanel-accordion-facet-list'>";
            for (var r in n) {
                var l = this.EscapedFacetName, c = n[r];
                f += "<li class='pv-filterpanel-accordion-facet-list-item' id='" + PivotViewer.Utils.Facets.CreateItemId(this.FacetName, c.Name) + "'>", f += "<input itemfacet='" + l + "' dateRangeStart='" + c.StartRange + "' dateRangeEnd='" + c.EndRange + "' class='pv-facet-facetitem-date' type='checkbox' />", f += "<div class='pv-facet-facetitem-label' title='" + c.Name + "'>" + c.Name + "</div>", f += "<span class='pv-facet-facetitem-count'>" + c.Count + "</span>", f += "</li>"
            }
            return f += "</ul>", f
        }, u.CreateCustomDateRange = function (e) {
            var t = {
                itemId: PivotViewer.Utils.Facets.CreateItemId(this.FacetName, "CustomDate"),
                escapedFacetItemName: this.EscapedFacetName,
                dateStart: PivotViewer.Utils.FormatDate(e[0], "yyyy-MM-dd"),
                dateEnd: PivotViewer.Utils.FormatDate(e[e.length - 1], "yyyy-MM-dd"),
                baseContentPath: this.BaseContentPath
            };
            return ich.pv_template_facettype_date_customrange(t)
        }, u.CreateDateTimeFacet(n)
    }, ClearSelected: function (e) {
        var t = $('.pv-facet-facetitem-date:checked[itemfacet="' + PivotViewer.Utils.Facets.EscapeItemName(e) + '"]');
        for (var n = 0; n < t.length; n++)$(t[n]).removeAttr("checked")
    }, ToStringArray: function (e) {
        return this.currentSelection || (this.currentSelection = this.GetCheckedValues()), this.currentSelection[e] ? this.currentSelection[e].map(function (e) {
            return PivotViewer.Utils.FormatDate(e.startRange, "dd/MM/yyyy") + " to " + PivotViewer.Utils.FormatDate(e.endRange, "dd/MM/yyyy")
        }) : []
    }, GetCheckedValues: function () {
        var e = {}, t = $(".pv-facet-facetitem-date:checked");
        for (var n = 0; n < t.length; n++) {
            var r = t.eq(n), i = PivotViewer.Utils.Facets.UnescapeItemName(r.attr("itemfacet")), s = r.attr("daterangestart").split("-"), o = r.attr("daterangeend").split("-"), u = new Date(s[0], s[1] - 1, s[2]), a = new Date(o[0], o[1] - 1, o[2]);
            u.setHours(0, 0, 0, 0), a.setHours(23, 59, 59, 999), e[i] ? e[i].push({
                startRange: u,
                endRange: a
            }) : e[i] = [{startRange: u, endRange: a}]
        }
        return e
    }
}), PivotViewer.FacetTypes.Number = PivotViewer.FacetTypes.IFacetType.subClass({
    init: function () {
        this.currentSelection = null
    }, TypeName: "Number", GetSelectedItems: function (e) {
        var t = [];
        this.currentSelection = this.GetSelectedValues();
        var n = 0;
        for (var r in this.currentSelection)$("#pv-cat-heading-" + PivotViewer.Utils.EscapeMetaChars(PivotViewer.Utils.EscapeItemId(r)) + " > .pv-filterpanel-accordion-heading-clear").css("visibility", "visible"), n++;
        var i = {};
        for (var r = 0; r < e.length; r++) {
            var s = e[r];
            if (n === 0) {
                i[s.Id] = 0;
                continue
            }
            for (var o in this.currentSelection) {
                var u = s.FindFacetByName(o);
                if (u)for (var a = 0; a < u.length; a++) {
                    var f = parseFloat(u[a].Value);
                    !isNaN(f) && f >= this.currentSelection[o].selectedMin && f <= this.currentSelection[o].selectedMax && (i[e[r].Id] ? i[e[r].Id]++ : i[e[r].Id] = 1)
                }
            }
        }
        for (var r in i)i[r] === n && t.push(r);
        return t.sort()
    }, FilterFacet: function (e, t) {
        var n = [];
        for (var r = 0; r < t.length; r++) {
            var i = t[r], s = i.FindFacetByName(e);
            if (s)for (var o = 0; o < s.length; o++)n.push(s[o].Value)
        }
        var u = PivotViewer.Utils.EscapeItemId(e), a = PivotViewer.Utils.Facets.EscapeItemName(e), f = PivotViewer.Utils.EscapeMetaChars(a), l = 165, c = 80, h = PivotViewer.Utils.Histogram(n), p = .5 + l / h.BinCount | 0, d = 0;
        for (var o = 0, v = h.Histogram.length; o < v; o++)d = d < h.Histogram[o].length ? h.Histogram[o].length : d;
        var m = h.StepSize * .1, g = {
            escapedItemFacetName: a,
            width: l,
            height: c,
            minValue: h.Min,
            maxValue: h.Max,
            bars: []
        };
        for (var o = 0, v = h.Histogram.length; o < v; o++) {
            var y = .5 + c / (d / h.Histogram[o].length) | 0, b = .5 + p * o | 0;
            h.Histogram[o].sort(), g.bars.push({
                xPos: b,
                yPos: c - y,
                width: p,
                height: y,
                maxValue: h.Histogram[o][h.Histogram[o].length - 1],
                minValue: h.Histogram[o][0]
            })
        }
        var w = ich.pv_template_facettype_number(g), E = $("#pv-cat-" + u);
        E.empty(), E.append(w);
        var S = w.find(".pv-filterpanel-numericslider");
        S.noUiSlider({
            range: [h.Min, h.Max], start: [h.Min, h.Max], step: m, handles: 2, slide: function () {
                var e = $(this).val();
                $(this).trigger("updatehistogram", {values: e})
            }, stop: function (e, t) {
                var n = $(this).val();
                $(this).trigger("updatevalue", {values: n})
            }
        }).bind("updatehistogram", function (e, t) {
            $(this).parent().find(".pv-filterpanel-numericslider-range-val").text(t.values[0] + " - " + t.values[1]);
            var n = $(this).parent().find("rect");
            for (var r = 0; r < n.length; r++) {
                var i = n[r].getAttribute("minvalue"), s = n[r].getAttribute("maxvalue");
                s < t.values[0] || i > t.values[1] ? n[r].setAttributeNS(null, "class", "pv-filterpanel-accordion-facet-chart-bar-disabled") : n[r].setAttributeNS(null, "class", "pv-filterpanel-accordion-facet-chart-bar")
            }
        }).bind("updatevalue", function (e, t) {
            var n = $(this);
            n.trigger("updatehistogram", {values: t.values});
            var r = this.range;
            t.values[0] > r[0] || t.values[1] < r[1] ? n.parent().parent().prev().find(".pv-filterpanel-accordion-heading-clear").css("visibility", "visible") : t.values[0] == r[0] && t.values[1] == r[1] && n.parent().parent().prev().find(".pv-filterpanel-accordion-heading-clear").css("visibility", "hidden");
            var i = PivotViewer.Utils.Facets.UnescapeItemName(n.attr("itemfacet"));
            $.publish("/PivotViewer/Collection/Filter", [{facet: i}])
        }), S.on("mouseup", "a", function (e) {
            var t = $(this).parent().val();
            $(this).trigger("updatevalue", {values: t})
        }), S.on("touchend", function (e) {
            var t = $(this).parent().val();
            $(this).trigger("updatevalue", {values: t})
        }), S[0].range = [h.Min, h.Max], S[0].actualRange = [h.MinActual, h.MaxActual]
    }, ClearSelected: function (e) {
        var t = $('.pv-filterpanel-numericslider[itemfacet="' + PivotViewer.Utils.Facets.EscapeItemName(e) + '"]');
        if (t.length > 0) {
            var n = t[0].range;
            t.val(n), t.prev().prev().html("&nbsp;")
        }
    }, ToStringArray: function (e) {
        return this.currentSelection || (this.currentSelection = this.GetCheckedValues()), this.currentSelection[e] ? [this.currentSelection[e].selectedMin + " to " + this.currentSelection[e].selectedMax] : []
    }, GetSelectedValues: function () {
        var e = {}, t = $(".pv-filterpanel-numericslider");
        for (var n = 0; n < t.length; n++) {
            var r = t.eq(n), i = r.val(), s = r[0].actualRange;
            i.length > 1 && isNaN(i[0]) && isNaN(i[1]) && s.length > 1 && s[0] === s[1] && (i = s);
            if (i[0] <= s[0] && i[1] >= s[1])continue;
            if (i[0] != s[0] || i[1] != s[1]) {
                var o = PivotViewer.Utils.Facets.UnescapeItemName(r.attr("itemfacet"));
                e[o] = {selectedMin: i[0], selectedMax: i[1], rangeMin: s[0], rangeMax: s[1]}
            }
        }
        return e
    }
}), PivotViewer.FacetTypes.String = PivotViewer.FacetTypes.IFacetType.subClass({
    init: function (e) {
        this.facetItemEmptyValueString = "(no info)", this.customSort = {}, this.currentSelection = null, this.baseContentPath = e;
        var t = this;
        $(document).on("click", ".pv-filterpanel-accordion-facet-sort", function (e) {
            var n = $(this), r = n.text(), i = n.parent().prev().children("a").text(), s = n.attr("customSort");
            r == "Sort: A-Z" ? $(this).text("Sort: Quantity") : r == "Sort: Quantity" && s == undefined ? $(this).text("Sort: A-Z") : r == "Sort: Quantity" ? $(this).text("Sort: " + s) : $(this).text("Sort: A-Z"), t.SortFacetItems(i, s)
        }), $(document).on("click", ".pv-facet-facetitem", function (e) {
            var t = PivotViewer.Utils.Facets.UnescapeItemName(this.getAttribute("itemfacet"));
            $.publish("/PivotViewer/Collection/Filter", [{facet: t}])
        }), $(document).on("click", ".pv-facet-facetitem-label", function (e) {
            var t = $(this), n = t.parent().find("input"), r = t.parent().parent().find(":checked");
            n.is(":checked") && r.length <= 1 ? n.removeAttr("checked") : n.attr("checked", "checked");
            for (var i = r.length - 1; i > -1; i -= 1) {
                var s = r[i];
                s.getAttribute("itemvalue") != n[0].getAttribute("itemvalue") && (s.checked = !1)
            }
            var o = PivotViewer.Utils.Facets.UnescapeItemName(n[0].getAttribute("itemfacet"));
            $.publish("/PivotViewer/Collection/Filter", [{facet: o}])
        })
    }, TypeName: "String", AddCustomSort: function (e, t) {
        this.customSort[e] = t
    }, GetSelectedItems: function (e) {
        var t = [];
        this.currentSelection = this.GetCheckedValues();
        var n = 0;
        for (var r in this.currentSelection)$("#pv-cat-heading-" + PivotViewer.Utils.EscapeMetaChars(PivotViewer.Utils.EscapeItemId(r)) + " > .pv-filterpanel-accordion-heading-clear").css("visibility", "visible"), n++;
        var i = {};
        for (var r = 0; r < e.length; r++) {
            var s = e[r];
            if (n === 0) {
                i[s.Id] = 0;
                continue
            }
            for (var o in this.currentSelection) {
                var u = s.FindFacetByName(o);
                if (u)for (var a = 0; a < u.length; a++)for (var f = 0; f < this.currentSelection[o].length; f++)u[a].Value == this.currentSelection[o][f] && (i[s.Id] ? i[s.Id]++ : i[s.Id] = 1); else for (var f = 0, l = this.currentSelection[o].length; f < l; f++)this.currentSelection[o][f] === this.facetItemEmptyValueString && (i[s.Id] ? i[s.Id]++ : i[s.Id] = 1)
            }
        }
        for (var r in i)i[r] === n && t.push(r);
        return t.sort()
    }, FilterFacet: function (e, t) {
        var n = {};
        for (var r = 0; r < t.length; r++) {
            var i = t[r], s = i.FindFacetByName(e);
            if (s)for (var o = 0; o < s.length; o++) {
                var u = PivotViewer.Utils.Facets.CreateItemId(e, s[o].Value);
                n[u] ? n[u].count++ : n[u] = {value: s[o].Value, count: 1}
            }
            //else {
            //    var u = PivotViewer.Utils.Facets.CreateItemId(e, this.facetItemEmptyValueString);
            //    n[u] ? n[u].count++ : n[u] = {value: this.facetItemEmptyValueString, count: 1}
            //}
        }
        var a = PivotViewer.Utils.EscapeItemId(e), f = PivotViewer.Utils.EscapeMetaChars(a), l = $("#pv-cat-" + f), c = {facets: []}, h;
        this.customSort[e] && (c.customSort = this.customSort[e], h = c.customSort.Name), this.currentSelection || (this.currentSelection = this.GetCheckedValues());
        for (var r in n) {
            var p = {
                itemId: r,
                itemValue: n[r].value,
                escapedItemFacetName: PivotViewer.Utils.Facets.EscapeItemName(e),
                escapedItemFacetValue: PivotViewer.Utils.Facets.EscapeItemValue(n[r].value),
                baseContentPath: this.baseContentPath,
                count: n[r].count
            };
            this.currentSelection[e] && $.inArray(n[r].value, this.currentSelection[e]) >= 0 && (p.checked = !0), c.facets.push(p)
        }
        var d = !1;
        if (l.find(".pv-filterpanel-accordion-facet-sort").length === 0) {
            var v = ich.pv_template_facettype_string_sort(c);
            l.append(v), d = !0
        }
        var m = ich.pv_template_facettype_string(c);
        l.find("ul").remove(), l.append(m), this.SortFacetItems(e, h)
    }, ClearSelected: function (e) {
        var t = $('.pv-facet-facetitem:checked[itemfacet="' + PivotViewer.Utils.Facets.EscapeItemName(e) + '"]');
        for (var n = 0; n < t.length; n++)$(t[n]).removeAttr("checked")
    }, ToStringArray: function (e) {
        return this.currentSelection || (this.currentSelection = this.GetCheckedValues()), this.currentSelection[e] ? this.currentSelection[e] : []
    }, GetCheckedValues: function () {
        var e = {}, t = $('.pv-facet-facetitem:checked[facetType="String"]');
        for (var n = 0; n < t.length; n++) {
            var r = t.eq(n), i = PivotViewer.Utils.Facets.UnescapeItemName(r.attr("itemfacet")), s = PivotViewer.Utils.Facets.UnescapeItemValue(r.attr("itemvalue"));
            e[i] ? e[i].push(s) : e[i] = [s]
        }
        return e
    }, SortFacetItems: function (e, t) {
        var n = PivotViewer.Utils.EscapeItemId(e), r = PivotViewer.Utils.EscapeMetaChars(n), i = $("#pv-cat-" + r + " ul"), s = i.prev().text().replace("Sort: ", "").replace(/[^\w-]/gi, ""), o = i.children("li").get();
        if (s == "A-Z")o.sort(function (e, t) {
            var n = $(e).children().first().attr("itemvalue"), r = $(t).children().first().attr("itemvalue");
            return n < r ? 1 : n > r ? -1 : 0
        }); else if (s == "Quantity")o.sort(function (e, t) {
            var n = parseInt($(e).children(".pv-facet-facetitem-count").text()), r = $(e).children().first().attr("itemvalue"), i = parseInt($(t).children(".pv-facet-facetitem-count").text()), s = $(t).children().first().attr("itemvalue");
            return n < i ? -1 : n > i ? 1 : r < s ? 1 : r > s ? -1 : 0
        }); else if (t && this.customSort[t]) {
            var u = [];
            for (var a = this.customSort[t].SortValues.length - 1; a > -1; a -= 1)for (var f = 0; f < o.length; f++)this.customSort[t].SortValues[a] == $(o[f]).children(".pv-facet-facetitem-label").text() && u.push(o[f]);
            o = u
        }
        for (var a = 0; a < o.length; a++)i.prepend(o[a])
    }
}), PivotViewer.Models.Collection = Object.subClass({
    init: function () {
        this.CollectionName = "", this.CollectionSource = "", this.BrandImage = "", this.FacetCategories = [], this.Items = [], this.CXMLBase = "", this.ImageBase = ""
    }, GetItemById: function (e) {
        for (var t = 0; t < this.Items.length; t++)if (this.Items[t].Id == e)return this.Items[t];
        return null
    }, GetFacetCategoryByName: function (e) {
        for (var t = 0; t < this.FacetCategories.length; t++)if (this.FacetCategories[t].Name == e)return this.FacetCategories[t];
        return null
    }
}), PivotViewer.Models.FacetCategory = Object.subClass({
    init: function (e, t, n, r, i, s, o) {
        this.Name = e, this.Format = t, this.Type = n !== null && n !== undefined ? n : PivotViewer.Models.FacetType.String, this.IsFilterVisible = r !== null && r !== undefined ? r : !0, this.IsMetaDataVisible = i !== null && i !== undefined ? i : !0, this.IsWordWheelVisible = s !== null && s !== undefined ? s : !0, this.CustomSort = o
    }
}), PivotViewer.Models.FacetCategorySort = Object.subClass({
    init: function (e) {
        this.Name = e, this.SortValues = []
    }
}), PivotViewer.Models.Item = Object.subClass({
    init: function (e, t, n, r) {
        this.Img = e.toString(), this.Id = t.toString(), this.Href = n, this.Name = r, this.Description = undefined, this.Facets = []
    }, AddFacetValue: function (e, t) {
        if (!t instanceof PivotViewer.Models.FacetValue)throw new Error("facetValue not an instance of PivotViewer.Models.FacetValue");
        if (this.Facets[e] === undefined || this.Facets[e] === null) {
            this.Facets[e] = [t];
            return
        }
        this.Facets[e].push(t)
    }, FindFacetByName: function (e) {
        return this.Facets[e]
    }
}), PivotViewer.Models.FacetValue = Object.subClass({
    init: function (e) {
        this.Value = e, this.Href = null
    }
}), PivotViewer.Models.FacetType = {
    Boolean: "Boolean",
    DateTime: "DateTime",
    Link: "Link",
    LongString: "LongString",
    Number: "Number",
    String: "String"
}, PivotViewer.Models.Loaders.ICollectionLoader = Object.subClass({
    init: function () {
    }, LoadCollection: function (e) {
        if (!e instanceof PivotViewer.Models.Collection)throw"collection not an instance of PivotViewer.Models.Collection."
    }
}), PivotViewer.Models.Loaders.CXMLLoader = PivotViewer.Models.Loaders.ICollectionLoader.subClass({
    init: function (e) {
        this.CXMLUri = e
    }, LoadCollection: function (e) {
        this._super(e), e.CXMLBase = this.CXMLUri;
        var t = {
            pivotXmlNamespace: "http://schemas.microsoft.com/livelabs/pivot/collection/2009",
            pivotXmlNamespacePrefix: "P"
        }, n = {};
        n.extractFacetCategories = function (n) {
            var r = n.find("FacetCategory");
            for (var i = 0; i < r.length; i++) {
                var s = r.eq(i), o = s.attr("Type");
                if (!PivotViewer.Models.FacetType[o])continue;
                var u = new PivotViewer.Models.FacetCategory(s.attr("Name"), s.attr("Format"), o, s.attr(t.pivotXmlNamespacePrefix + ":IsFilterVisible") != undefined ? s.attr(t.pivotXmlNamespacePrefix + ":IsFilterVisible").toLowerCase() == "true" ? !0 : !1 : !0, s.attr(t.pivotXmlNamespacePrefix + ":IsMetaDataVisible") != undefined ? s.attr(t.pivotXmlNamespacePrefix + ":IsMetaDataVisible").toLowerCase() == "true" ? !0 : !1 : !0, s.attr(t.pivotXmlNamespacePrefix + ":IsWordWheelVisible") != undefined ? s.attr(t.pivotXmlNamespacePrefix + ":IsWordWheelVisible").toLowerCase() == "true" ? !0 : !1 : !1), a = s.find(t.pivotXmlNamespacePrefix + "\\:SortOrder"), f = a.find(t.pivotXmlNamespacePrefix + "\\:SortValue");
                a.length == 0 && (a = s.find("SortOrder"), f = a.find("SortValue"));
                if (a.length == 1) {
                    var l = new PivotViewer.Models.FacetCategorySort(a.attr("Name"));
                    for (var c = 0; c < f.length; c++)l.SortValues.push(f.eq(c).attr("Value"));
                    u.CustomSort = l
                }
                e.FacetCategories.push(u)
            }
        }, n.extractNamespace = function (e) {
            var n = e.get(0);
            for (var r = 0; r < n.attributes.length; r++) {
                var i = n.attributes[r];
                if (i.value === t.pivotXmlNamespace) {
                    t.pivotXmlNamespacePrefix = i.localName != undefined ? i.localName : i.baseName;
                    break
                }
            }
        }, n.parseDate = function (e) {
            var t = null, n = e.split(/[- : T .]/);
            if (n.length >= 3) {
                var r = n[0], i = n[1] - 1, s = n[2], o = n.length >= 4 ? n[3] : 0, u = n.length >= 5 ? n[4] : 0, a = n.length >= 6 ? n[5] : 0, f = n.length >= 7 ? n[6] : 0;
                t = new Date(r, i, s, o, u, a, f)
            }
            return t
        }, n.parseFacetChildValue = function (e) {
            var t = e.get(0), r = t.nodeName, i = null;
            if (r == "Spatial") {
                var s = $.trim(e.attr("Latitude")), o = $.trim(e.attr("Longitude"));
                PivotViewer.Models.FacetSpatialValue && (i = new PivotViewer.Models.FacetSpatialValue(parseFloat(s), parseFloat(o)))
            } else if (r == "Link")i = new PivotViewer.Models.FacetValue(e.attr("Name")), i.Href = e.attr("Href"); else {
                var u = $.trim(e.attr("Value"));
                if (r == "Number")i = new PivotViewer.Models.FacetValue(parseFloat(u)); else if (r == "DateTime") {
                    var a = n.parseDate(u);
                    a instanceof window.Date ? i = new PivotViewer.Models.FacetValue(a) : Debug.Log("priv.parseFacetChildValue", "Could not parse DateTime facet value", u, a)
                } else i = new PivotViewer.Models.FacetValue(u)
            }
            return i
        }, n.extractItemFacetValues = function (e, t) {
            var r = e.find("Facet");
            for (var i = 0; i < r.length; i++) {
                var s = r.eq(i), o = s.attr("Name"), u = s.children();
                for (var a = 0; a < u.length; a++) {
                    var f = u.eq(a), l = n.parseFacetChildValue(f);
                    t.AddFacetValue(o, l)
                }
            }
        }, n.extractItemDescriptions = function (e, t) {
            var n = e.find("Description");
            if (n.length == 1) {
                var r = n.get(0);
                r.childNodes.length && (t.Description = r.childNodes[0].nodeValue)
            }
        }, n.extractItems = function (t) {
            var r = t.find("Items");
            if (r.length == 1) {
                var i = r.first();
                e.ImageBase = i.attr("ImgBase");
                var s = i.find("Item");
                for (var o = 0; o < s.length; o++) {
                    var u = s.eq(o), a = new PivotViewer.Models.Item(u.attr("Img").replace("#", ""), u.attr("Id"), u.attr("Href"), u.attr("Name"));
                    n.extractItemDescriptions(u, a), n.extractItemFacetValues(u, a), e.Items.push(a)
                }
            }
        }, n.extractCollectionInformation = function (n) {
            e.CollectionName = n.attr("Name"), e.BrandImage = n.attr(t.pivotXmlNamespacePrefix + ":BrandImage") != undefined ? n.attr(t.pivotXmlNamespacePrefix + ":BrandImage") : ""
        }, n.parseCxml = function (e) {
            Debug.Log("CXML loaded");
            var t = $(e), r = t.find("Collection").first();
            n.extractNamespace(r), n.extractCollectionInformation(r), n.extractFacetCategories(t), n.extractItems(t), $.publish("/PivotViewer/Models/Collection/Loaded", null)
        }, n.handleAjaxError = function (e, t, n) {
            $(".pv-loading").remove(), Debug.Error("priv.handleAjaxError", arguments);
            var r = "";
            r += "Error loading CXML Collection\r\n\r\n", r = r + "URL        : " + this.url + "\r\n", r = r + "Statuscode : " + e.status + "\r\n", r = r + "Details    : " + n + "\r\n", r += "\r\nPivot Viewer cannot continue until this problem is resolved\r\r", Debug.Alert(r)
        }, $.ajax({url: this.CXMLUri, dataType: "xml"}).done(n.parseCxml).fail(n.handleAjaxError)
    }
}), PivotViewer.Models.Loaders.JSONLoader = PivotViewer.Models.Loaders.ICollectionLoader.subClass({
    init: function (e) {
        this.JSONUri = e
    }, LoadCollection: function (e) {
        this._super(e), e.CXMLBase = this.JSONUri;
        var t = {};
        t.parseJSON = function (n) {
            e.CollectionName = n.Name, e.BrandImage = n.BrandImage, e.ImageBase = n.ImgBase, t.parseFacetCategories(n.FacetCategories), t.parseItems(n.Items), $.publish("/PivotViewer/Models/Collection/Loaded", null)
        }, t.handleAjaxError = function (e, t, n) {
            Debug.Error("priv.handleAjaxError", arguments)
        }, t.parseFacetCategories = function (t) {
            for (var n = 0; n < t.length; n++) {
                if (!PivotViewer.Models.FacetType[t[n].Type])continue;
                var r = new PivotViewer.Models.FacetCategory(t[n].Name, "", t[n].Type, t[n].IsFilterVisible, t[n].IsMetaDataVisible, t[n].IsWordWheelVisible);
                if (t[n].SortOrder) {
                    var i = new PivotViewer.Models.FacetCategorySort(t[n].SortOrder.Name);
                    i.SortValues = t[n].SortOrder.SortValues, r.CustomSort = i
                }
                e.FacetCategories.push(r)
            }
        }, t.parseItems = function (n) {
            for (var r = 0; r < n.length; r++) {
                var i = new PivotViewer.Models.Item(n[r].Img, n[r].Id, n[r].Href, n[r].Name);
                i.Description = n[r].Description, t.parseFacetValues(i, n[r].Facets), e.Items.push(i)
            }
        }, t.parseFacetValues = function (n, r) {
            for (var i = 0; i < r.length; i++) {
                var s = r[i].Name, o = e.GetFacetCategoryByName(s);
                if (!o)continue;
                for (var u = 0; u < r[i].Values.length; u++) {
                    var a;
                    switch (o.Type) {
                        case PivotViewer.Models.FacetType.Link:
                            a = new PivotViewer.Models.FacetValue(r[i].Values[u].Name), a.Href = r[i].Values[u].Href;
                            break;
                        case PivotViewer.Models.FacetType.Spatial:
                            a = new PivotViewer.Models.FacetSpatialValue(r[i].Values[u].Latitude, r[i].Values[u].Longitude);
                            break;
                        case PivotViewer.Models.FacetType.DateTime:
                            var f = t.parseDate(r[i].Values[u].Value);
                            f instanceof window.Date ? a = new PivotViewer.Models.FacetValue(f) : Debug.Error("priv.parseFacetChildValue", "Could not parse DateTime facet value", r[i].Values[u].Value, f);
                            break;
                        default:
                            a = new PivotViewer.Models.FacetValue(r[i].Values[u].Value)
                    }
                    n.AddFacetValue(s, a)
                }
            }
        }, t.parseDate = function (e) {
            var t = (new Date).getTimezoneOffset() * 6e4, n = /\/Date\((-?\d+)([+-]\d{2})?(\d{2})?.*/.exec(e);
            return n[2] == undefined && (n[2] = 0), n[3] == undefined && (n[3] = 0), new Date(+n[1] + t + n[2] * 36e5 + n[3] * 6e4)
        }, $.ajax({url: this.JSONUri, dataType: "json"}).done(t.parseJSON).fail(t.handleAjaxError)
    }
}), PivotViewer.ZoomController = Object.subClass({
    init: function (e, t) {
        this.width = e, this.originalWidth = e, this.height = t, this.originalHeight = t, this.maxLevel = 1, this.maxScale = 1, this.scale = 1, this.delta = 0, this.offsetX = 0, this.offsetY = 0, this.offsetRateX = 0, this.offsetRateY = 0, this.mouseX = 0, this.mouseY = 0;
        var n = this;
        $.subscribe("/PivotViewer/ZoomController/ZoomAndCentre", function (e) {
            n.zoomAndCentre(e.x, e.y, e.scale, e.milliseconds)
        }), $.subscribe("/PivotViewer/Views/Resize", function (e) {
            n.width = e.width, n.originalWidth = e.width, n.height = e.height, n.originalHeight = e.height
        })
    }, zoom: function (e, t, n) {
        var r = this.originalWidth * n, i = this.originalHeight * n;
        r > this.originalWidth * this.maxScale && (r = this.originalWidth * this.maxScale, i = this.originalHeight * this.maxScale, n = this.maxScale);
        if (r < this.originalWidth || n === 1)this.offsetX = 0, this.offsetY = 0, this.width = this.originalWidth, this.height = this.originalHeight, this.delta = 1 - this.scale, this.scale = 1; else {
            var s = this.calcOffset(e, t, n);
            this.offsetX = s.x, this.offsetY = s.y, this.height = i, this.width = r, this.delta = n - this.scale, this.scale = n
        }
        this.x = e, this.y = t, $.publish("/PivotViewer/Views/Canvas/Zoom", [this])
    }, zoomAndCentre: function (e, t, n, r) {
        function g() {
            var e = PivotViewer.Utils.Now() - i, t = s - i;
            if (e < t) {
                var n = v.ease(e, l, h - l, t), r = v.ease(e, c, p - c, t), d = v.ease(e, o, u - o, t), y = v.ease(e, a, f - a, t);
                m.width = d, m.height = y, m.offsetX = n, m.offsetY = r;
                var b = d / m.originalWidth;
                m.delta = b - m.scale, m.scale = b, m.last = !1, $.publish("/PivotViewer/Views/Canvas/Zoom", [m]), window.requestAnimFrame(function () {
                    g()
                })
            } else {
                m.width = u, m.height = f, m.offsetX = h, m.offsetY = p;
                var b = u / m.originalWidth;
                m.delta = b - m.scale, m.scale = b, m.last = !0, $.publish("/PivotViewer/Views/Canvas/Zoom", [m])
            }
        }

        this.x = this.originalWidth / 2, this.y = this.originalHeight / 2;
        var i = PivotViewer.Utils.Now(), s = i + r, o = this.width, u = this.originalWidth * n, a = this.height, f = this.originalHeight * n, l = this.offsetX, c = this.offsetY;
        if (l === 0 && l === e && c === 0 && c === t && this.scale === 1 && n === 1)return;
        var h = e > 0 ? (Math.abs(this.offsetX) + e) / this.scale * -1 * n : 0, p = t > 0 ? (Math.abs(this.offsetY) + t) / this.scale * -1 * n : 0;
        if (n === this.scale) {
            var d = this.calcDifference(e, t);
            h = this.offsetX + d.x, p = this.offsetY + d.y
        }
        var v = new Easing.Easer({type: "circular", side: "both"}), m = this;
        n > 1 && n !== this.scale && (h += this.originalWidth / 2, p += this.originalHeight / 2), g()
    }, calcOffset: function (e, t, n) {
        var r = (e - this.offsetX) / this.scale * n, i = (t - this.offsetY) / this.scale * n;
        return {x: e - r, y: t - i}
    }, calcDifference: function (e, t) {
        var n = this.x - this.offsetX - (e - this.offsetX), r = this.y - this.offsetY - (t - this.offsetY);
        return {x: n, y: r}
    }, setMaxScale: function (e, t) {
        var n = Math.pow(2, this.maxLevel), r = Math.max(e, t);
        this.maxScale = n / r
    }, offset: function (e, t) {
        this.offsetRateX = e, this.offsetRateY = t, this.offsetX += e, this.offsetY += t
    }, reset: function () {
        this.width = this.originalWidth, this.height = this.originalHeight, this.scale = 1, this.delta = 0, this.offsetX = 0, this.offsetY = 0
    }
}), PivotViewer.Search.SearchProviderController = Object.subClass({
    init: function (e) {
        this.Providers = {};
        var t = PivotViewer.Utils.GetInstancesOfType(window.PivotViewer.Search, PivotViewer.Search.ISearchProvider);
        for (var n = 0; n < t.length; n++)this.Providers[t[n].prototype.TypeName] = new t[n](e)
    }
}), PivotViewer.Search.ISearchProvider = Object.subClass({
    init: function (e) {
    }, TypeName: "", Search: function (e, t) {
    }
}), PivotViewer.Views.IPivotViewerView = Object.subClass({
    init: function () {
        this.isActive = !1, this.init = !0, this.selected = "", this.tiles = []
    }, Setup: function (e, t, n, r, i) {
    }, Filter: function (e, t, n) {
    }, GetUI: function () {
        return ""
    }, GetButtonImage: function () {
        return ""
    }, GetButtonImageSelected: function () {
        return ""
    }, GetViewName: function () {
        return ""
    }, Activate: function () {
        this.isActive = !0
    }, Deactivate: function () {
        this.isActive = !1
    }
}), PivotViewer.Views.TileBasedView = PivotViewer.Views.IPivotViewerView.subClass({
    init: function () {
        this.tiles = [], this.isActive = !1;
        var e = this;
        $.subscribe("/PivotViewer/Views/Canvas/Hover", function (t) {
            if (!e.isActive)return;
            var n = null, r = e.GetSelectedTile(e.tiles, t.x, t.y);
            r && (r.location.Highlighted(!0), n = r.location, $.publish("/PivotViewer/Views/Item/Hover", [r])), n || $.publish("/PivotViewer/Views/Item/Hover", null)
        }), $.subscribe("/PivotViewer/Views/Canvas/ClickLong", function (t) {
            if (!e.isActive)return;
            var n = null, r = 0, i = 0, s = 0, o = 0, u = e.GetSelectedTile(e.tiles, t.x, t.y);
            for (var a = 0; a < e.tiles.length; a++)for (var f = 0, l = e.tiles[a].Location.length; f < l; f++)if (e.tiles[a].Location[f].Contains(t.x, t.y)) {
                var c = !e.tiles[a].Checked;
                e.tiles[a].Checked = c, c ? $.publish("/PivotViewer/Views/Item/Checked", [e.tiles[a].facetItem.Id]) : $.publish("/PivotViewer/Views/Item/Unchecked", [e.tiles[a].facetItem.Id]), $.publish("/PivotViewer/Views/Tile/Update/" + e.tiles[a].facetItem.Img, null)
            }
            $.publish("/PivotViewer/TileController/Animate", null)
        }), $.subscribe("/PivotViewer/Views/Canvas/Drag", function (t) {
            if (!e.isActive)return;
            var n = t.offsetRateX, r = t.offsetRateY, i = !1, s = !1;
            e.currentOffsetX += n, e.currentOffsetY += r, n > 0 && e.currentOffsetX > e.offsetX && (t.offset(n * -1, 0), e.currentOffsetX -= n, i = !0), r > 0 && e.currentOffsetY > e.offsetY && (t.offset(0, r * -1), e.currentOffsetY -= r, s = !0), e.currentOffsetX < e.offsetX && e.currentWidth == e.width && (t.offset(n * -1, 0), e.currentOffsetX -= n, i = !0), n < 0 && e.currentOffsetX < -1 * (e.currentWidth - e.width) && (t.offset(n * -1, 0), e.currentOffsetX -= n, i = !0), e.currentOffsetY < e.offsetY && e.currentHeight == e.height && (t.offset(0, r * -1), e.currentOffsetY -= r, s = !0), r < 0 && e.currentOffsetY - e.offsetY < -1 * (e.currentHeight - e.height) && (t.offset(0, r * -1), e.currentOffsetY -= r, s = !0);
            if (i && s)return;
            i ? e.OffsetTiles(0, r) : s ? e.OffsetTiles(n, 0) : e.OffsetTiles(n, r), $.publish("/PivotViewer/TileController/Animate", [{Drag: !0}])
        }), $.subscribe("/PivotViewer/Views/Item/Next", function (t) {
            if (!e.isActive)return;
            e.GoToNextTile(!0)
        }), $.subscribe("/PivotViewer/Views/Item/Previous", function (t) {
            if (!e.isActive)return;
            e.GoToNextTile(!1)
        })
    }, OffsetTiles: function (e, t) {
        for (var n = 0; n < this.tiles.length; n++) {
            var r = $.inArray(this.tiles[n].facetItem.Id, this.currentFilter);
            if (r >= 0)for (var i = 0, s = this.tiles[n].Location.length; i < s; i++)this.tiles[n].Location[i].destinationx += e, this.tiles[n].Location[i].destinationy += t
        }
    }, SetInitialTiles: function (e, t, n) {
        var r = t / 2, i = n / 2;
        for (var s = 0; s < e.length; s++)for (var o = 0, u = e[s].Location.length; o < u; o++)this.SetInitialTile(e[s].Location[o], r, i)
    }, SetInitialTile: function (e, t, n) {
        e.x = t, e.y = n, e.velocityx = 0, e.velocityy = 0, e.startx = t, e.starty = n, e.destinationx = t, e.destinationy = n, e.width = 1, e.height = 1
    }, GetRowsAndColumns: function (e, t, n, r) {
        var i = .7, s = n * (r - Math.pow(i, 2)), o = (t + e * n) * i, u = -1 * t * e, a = (-1 * o + Math.sqrt(Math.pow(o, 2) - 4 * s * u)) / (2 * s), f = Math.floor(a * n), l = Math.ceil(t / f), c = Math.floor(e / a);
        return {Rows: l, Columns: c, TileWidth: a, TileHeight: f}
    }, SetOuterTileDestination: function (e, t, n) {
        var r = n.x - e / 2, i = n.y - t / 2, s = i / r, o = Math.atan2(i, r);
        n.destinationx = e * 2 * Math.cos(o) + e / 2, n.destinationy = t * 2 * Math.sin(o) + t / 2
    }, GetSelectedTile: function (e, t, n) {
        for (var r = 0; r < e.length; r++)for (var i = 0; i < e[r].Location.length; i++)if (e[r].Location[i].Contains(t, n))return {
            item: e[r].facetItem,
            location: e[r].Location[i]
        };
        return null
    }, SortBy: function (e, t, n) {
        var r = function (t) {
            if (n)for (var r in t.facetItem.Facets)if (r != undefined && r == e && t.facetItem.Facets[r].length > 0)return n(t.facetItem.Facets[r][0].Value);
            return null
        };
        return function (e, n) {
            var i = r(e), s = r(n), o = (i < s ? -1 : i > s ? 1 : 0) * [1, -1][+!!t];
            return o == 0 && (o = (e.facetItem.Name < n.facetItem.Name ? -1 : e.facetItem.Name > n.facetItem.Name ? 1 : 0) * [1, -1][+!!t]), o
        }
    }
}), PivotViewer.Views.GridView = PivotViewer.Views.TileBasedView.subClass({
    init: function () {
        this.Scale = 1, this._super();
        var e = this;
        $.subscribe("/PivotViewer/Views/Canvas/Click", function (t) {
            if (!e.isActive)return;
            var n = null, r = null, i = 0, s = 0, o = e.GetSelectedTile(e.tiles, t.x, t.y);
            o && (n = o.item.Id, r = o.location, i = Math.round((o.location.x - e.currentOffsetX) / o.location.width), s = Math.round((o.location.y - e.currentOffsetY) / o.location.height), o.location.Selected(!0));
            for (var u = 0; u < e.tiles.length; u++)for (var a = 0, f = e.tiles[u].Location.length; a < f; a++)e.tiles[u].Location[a] != o.location && e.tiles[u].Location[a].Selected(!1);
            if (t.context && n != null) {
                $.publish("/PivotViewer/Views/Item/Context", [{item: n, location: r}]);
                return
            }
            if (n != null && e.selected != n) {
                e.selected = n;
                var l = 1;
                e.width < e.height ? l = (e.width - e.offsetX) / e.rowscols.TileWidth * .9 : l = (e.height - e.offsetY) / e.rowscols.TileHeight * .9, l = l < 1 ? 1 : l, $.publish("/PivotViewer/ZoomController/ZoomAndCentre", [{
                    x: o.location.x + o.location.width / 2,
                    y: o.location.y + o.location.height / 2,
                    scale: l,
                    milliseconds: 1e3
                }])
            } else e.selected = n = null, $.publish("/PivotViewer/ZoomController/ZoomAndCentre", [{
                x: 0,
                y: 0,
                scale: 1,
                milliseconds: 1e3
            }]);
            $.publish("/PivotViewer/Views/Item/Selected", [{item: n, location: r}])
        }), $.subscribe("/PivotViewer/Views/Canvas/Zoom", function (t) {
            if (!e.isActive)return;
            var n = 0, r = t.offsetX + e.offsetX * t.scale, i = t.offsetY + e.offsetY * t.scale;
            if (e.currentWidth == t.width && e.currentHeight == t.height && e.currentOffsetX == r && e.currentOffsetY == i)return;
            e.currentWidth = t.width, e.currentHeight = t.height, e.currentOffsetX = r, e.currentOffsetY = i;
            var s = e.GetRowsAndColumns(e.currentWidth - e.offsetX, e.currentHeight - e.offsetY, e.ratio, e.currentFilter.length);
            s.TileWidth = e.rowscols.TileWidth * t.scale, s.TileHeight = e.rowscols.TileHeight * t.scale, e.SetVisibleTilePositions(s, e.currentFilter, e.currentOffsetX, e.currentOffsetY, !0, !0, n);
            var o = t.last ? !0 : !1;
            $.publish("/PivotViewer/TileController/Animate", [{last: o}]);
            if (t.delta < 0) {
                for (var u = 0; u < e.tiles.length; u++)for (var a = 0; a < e.tiles[u].Location.length; a++)e.tiles[u].Location[a].Selected(!1);
                e.selected = "", $.publish("/PivotViewer/Views/Item/Selected", null)
            }
        }), $.subscribe("/PivotViewer/Views/Resize", function (t) {
            e.width = t.width, e.height = t.height, e.currentWidth = e.width, e.currentHeight = e.height;
            if (!e.isActive)return;
            var n = e.GetRowsAndColumns(e.currentWidth - e.offsetX, e.currentHeight - e.offsetY, e.ratio, e.currentFilter.length);
            e.SetVisibleTilePositions(n, e.currentFilter, e.currentOffsetX, e.currentOffsetY, !0, !1, 1e3), $.publish("/PivotViewer/TileController/Animate", null)
        })
    }, Setup: function (e, t, n, r, i) {
        this.width = e, this.height = t, this.offsetX = n, this.offsetY = r, this.ratio = i, this.currentWidth = this.width, this.currentHeight = this.height, this.currentOffsetX = this.offsetX, this.currentOffsetY = this.offsetY
    }, Filter: function (e, t, n, r) {
        var i = this;
        if (!Modernizr.canvas)return;
        Debug.Log("Grid View Filtered: " + t.length), this.tiles = e, this.initialise && this.SetInitialTiles(this.tiles, this.width, this.height), this.tiles = this.tiles.sort(this.SortBy(r, !1, function (e) {
            return $.isNumeric(e) || e.getDate ? e : e.toUpperCase()
        }));
        var s = 0;
        this.currentWidth != this.width && !this.initialise && (this.selected = selectedItem = null, $.publish("/PivotViewer/ZoomController/ZoomAndCentre", [{
            x: 0,
            y: 0,
            scale: 1,
            milliseconds: 1e3
        }]), s = 1e3), setTimeout(function () {
            i.currentFilter = t;
            for (var e = 0; e < i.tiles.length; e++)for (var n = 0, r = i.tiles[e].Location.length; n < r; n++) {
                i.tiles[e].Location[n].startx = i.tiles[e].Location[n].x, i.tiles[e].Location[n].starty = i.tiles[e].Location[n].y, i.tiles[e].Location[n].startwidth = i.tiles[e].Location[n].width, i.tiles[e].Location[n].startheight = i.tiles[e].Location[n].height;
                var s = $.inArray(i.tiles[e].facetItem.Id, t);
                s < 0 && (i.SetOuterTileDestination(i.width, i.height, i.tiles[e].Location[n]), i.tiles[e].Location[n].start = null, i.tiles[e].Location[n].animationLength = 1e3)
            }
            $.publish("/PivotViewer/TileController/Animate", null);
            var o = t.length == i.tiles.length ? 0 : 500;
            setTimeout(function () {
                var e = i.GetRowsAndColumns(i.width - i.offsetX, i.height - i.offsetY, i.ratio, i.currentFilter.length);
                i.SetVisibleTilePositions(e, i.currentFilter, i.offsetX, i.offsetY, !1, !1, 1e3), $.publish("/PivotViewer/TileController/Animate", null)
            }, o)
        }, s), this.initialise = !1
    }, GetUI: function () {
        return Modernizr.canvas ? "" : "<div class='pv-viewpanel-unabletodisplay'><h2>Unfortunately this view is unavailable as your browser does not support this functionality.</h2>Please try again with one of the following supported browsers: IE 9+, Chrome 4+, Firefox 2+, Safari 3.1+, iOS Safari 3.2+, Opera 9+<br/><a href='http://caniuse.com/#feat=canvas'>http://caniuse.com/#feat=canvas</a></div>"
    }, GetButtonImage: function () {
        return "/images/GridView.png"
    }, GetButtonImageSelected: function () {
        return "/images/GridViewSelected.png"
    }, GetViewName: function () {
        return "Grid View"
    }, SetVisibleTilePositions: function (e, t, n, r, i, s, o) {
        var u = s && this.rowscols ? this.rowscols.Columns : e.Columns;
        s || (this.rowscols = e);
        var a = 0, f = 0;
        for (var l = 0; l < this.tiles.length; l++) {
            var c = $.inArray(this.tiles[l].facetItem.Id, t);
            if (c >= 0) {
                for (var h = 0, p = this.tiles[l].Location.length; h < p; h++)i && (this.tiles[l].Location[h].startx = this.tiles[l].Location[h].x, this.tiles[l].Location[h].starty = this.tiles[l].Location[h].y, this.tiles[l].Location[h].startwidth = this.tiles[l].Location[h].width, this.tiles[l].Location[h].startheight = this.tiles[l].Location[h].height), this.tiles[l].Location[h].destinationwidth = e.TileWidth, this.tiles[l].Location[h].destinationheight = e.TileHeight, this.tiles[l].Location[h].destinationx = a * e.TileWidth + n, this.tiles[l].Location[h].destinationy = f * e.TileHeight + r, this.tiles[l].Location[h].start = null, this.tiles[l].Location[h].animationLength = o;
                a == u - 1 ? (a = 0, f++) : a++
            }
        }
    }, GoToNextTile: function (e) {
        for (var t = 0; t < this.tiles.length; t++)if (this.tiles[t].facetItem.Id == this.selected) {
            if (this.tiles[t].Location.length > 0) {
                var n = 0, r = 0;
                if (e)n = this.tiles[t].Location[0].x + this.tiles[t].Location[0].width * 1.5, r = this.tiles[t].Location[0].y + this.tiles[t].Location[0].height / 2, n + Math.abs(this.currentOffsetX) > this.rowscols.Columns * this.tiles[t].Location[0].width && (n = this.currentOffsetX + this.tiles[t].Location[0].width / 2, r = this.tiles[t].Location[0].y + this.tiles[t].Location[0].height * 1.5), this.GetSelectedLocation(n, r) == null && (n = this.currentOffsetX + this.tiles[t].Location[0].width / 2, r = this.currentOffsetY + this.tiles[t].Location[0].height / 2); else {
                    n = this.tiles[t].Location[0].x - this.tiles[t].Location[0].width / 2, r = this.tiles[t].Location[0].y + this.tiles[t].Location[0].height / 2, n < this.currentOffsetX && (n = this.rowscols.Columns * this.tiles[t].Location[0].width + this.currentOffsetX - 1, r = this.tiles[t].Location[0].y - 1);
                    if (r < this.currentOffsetY)break
                }
                $.publish("/PivotViewer/Views/Canvas/Click", [{x: n, y: r}])
            }
            break
        }
    }, GetSelectedLocation: function (e, t) {
        for (var n = 0; n < this.tiles.length; n++)for (var r = 0, i = this.tiles[n].Location.length; r < i; r++)if (this.tiles[n].Location[r].Contains(e, t))return this.tiles[n].Location[r];
        return null
    }
}), PivotViewer.Views.GraphView = PivotViewer.Views.TileBasedView.subClass({
    init: function () {
        this._super();
        var e = this;
        this.buckets = [], this.Scale = 1, this.canvasHeightUIAdjusted = 0, $.subscribe("/PivotViewer/Views/Canvas/Click", function (t) {
            if (!e.isActive)return;
            var n = null, r = null, i = !1;
            for (var s = 0; s < e.buckets.length; s++)for (var o = 0; o < e.buckets[s].Items.length; o++)e.buckets[s].Items[o].Location.Contains(t.x, t.y) ? (n = e.buckets[s].Items[o].Id, e.selectedItem = {
                bucket: s,
                item: o
            }, r = e.buckets[s].Items[o].Location, e.buckets[s].Items[o].Location.Selected(!0), i = !0) : e.buckets[s].Items[o].Location.Selected(!1);
            if (t.context && n != null) {
                $.publish("/PivotViewer/Views/Item/Context", [{item: n, location: r}]);
                return
            }
            if (n != null && e.selected != n) {
                e.selected = n;
                var u = 1;
                e.width < e.height ? u = (e.width - e.offsetX) / e.rowscols.TileWidth * .9 : u = (e.height - e.offsetY) / e.rowscols.TileHeight * .9, u = u < 1 ? 1 : u, $(".pv-viewarea-graphview-overlay div").fadeOut("slow"), $.publish("/PivotViewer/ZoomController/ZoomAndCentre", [{
                    x: r.x + r.width / 2,
                    y: r.y + r.height / 2,
                    scale: u,
                    milliseconds: 1e3
                }])
            } else e.selected = selectedItem = null, e.selectedItem = null, $.publish("/PivotViewer/ZoomController/ZoomAndCentre", [{
                x: 0,
                y: 0,
                scale: 1,
                milliseconds: 1e3
            }]), $(".pv-viewarea-graphview-overlay div").fadeIn("slow");
            $.publish("/PivotViewer/TileController/Animate", null), $.publish("/PivotViewer/Views/Item/Selected", [{
                item: n,
                location: r
            }]);
            if (!i) {
                var a = Math.floor((t.x - e.offsetX) / e.columnWidth);
                $.publish("/PivotViewer/Views/Item/Filtered", [{Facet: e.sortFacet, Items: e.buckets[a].range}])
            }
        }), $.subscribe("/PivotViewer/Views/Canvas/Hover", function (t) {
            if (!e.isActive)return;
            $(".pv-viewarea-graphview-overlay-bucket").removeClass("graphview-bucket-hover");
            var n = Math.floor((t.x - e.offsetX) / e.columnWidth), r = $("#pv-viewarea-graphview-overlay-bucket-" + n);
            r.addClass("graphview-bucket-hover")
        }), $.subscribe("/PivotViewer/Views/Canvas/Zoom", function (t) {
            if (!e.isActive)return;
            var n = t.offsetX + e.offsetX * t.scale, r = t.offsetY + e.offsetY * t.scale;
            if (e.currentWidth == t.width && e.currentHeight == t.height && e.currentOffsetX == n && e.currentOffsetY == r)return;
            t.width < e.width || t.scale == 1 ? $(".pv-viewarea-graphview-overlay div").fadeIn("slow") : $(".pv-viewarea-graphview-overlay div").fadeOut("slow"), e.currentWidth = t.width, e.currentHeight = t.height, e.canvasHeightUIAdjusted = e.currentHeight - e.bucketUIHeight * t.scale, e.currentOffsetX = n, e.currentOffsetY = r, e.columnWidth = (t.width - e.offsetX * t.scale) / e.buckets.length;
            var i = e.GetRowsAndColumns(e.columnWidth - 2, e.canvasHeightUIAdjusted, e.ratio, e.bigCount);
            i.TileWidth = e.rowscols.TileWidth * t.scale, i.TileHeight = e.rowscols.TileHeight * t.scale, e.SetVisibleTileGraphPositions(i, e.currentOffsetX, e.currentOffsetY, !0, !0, 0);
            var s = t.last ? !0 : !1;
            $.publish("/PivotViewer/TileController/Animate", [{last: s}]);
            if (t.delta < 0) {
                for (var o = 0; o < e.tiles.length; o++)for (var u = 0, a = e.tiles[o].Location.length; u < a; u++)e.tiles[o].Location[u].Selected(!1);
                e.selected = null, $.publish("/PivotViewer/Views/Item/Selected", null)
            }
        }), $.subscribe("/PivotViewer/Views/Resize", function (t) {
            e.width = t.width, e.height = t.height, e.currentWidth = e.width, e.currentHeight = e.height;
            if (!e.isActive)return;
            e.canvasHeightUIAdjusted = e.currentHeight - e.bucketUIHeight, e.columnWidth = (t.width - e.offsetX) / e.buckets.length;
            var n = e.GetRowsAndColumns(e.columnWidth - 2, e.canvasHeightUIAdjusted, e.ratio, e.bigCount);
            e.SetVisibleTileGraphPositions(n, e.currentOffsetX, e.currentOffsetY, !0, !1, 1e3), e.InitUI(), $.publish("/PivotViewer/TileController/Animate", null)
        })
    }, Setup: function (e, t, n, r, i) {
        this.width = e, this.height = t, this.offsetX = n, this.offsetY = r, this.ratio = i, this.currentWidth = this.width, this.currentHeight = this.height, this.currentOffsetX = this.offsetX, this.currentOffsetY = this.offsetY, this.rowscols = null, this.bigCount = 0, this.bucketUIHeight = 62
    }, Filter: function (e, t, n, r) {
        var i = this;
        if (!Modernizr.canvas)return;
        Debug.Log("Graph View Filtered: " + t.length), this.sortFacet = r, this.tiles = e, this.currentFilter = t, this.initialise && this.SetInitialTiles(this.tiles, this.width, this.height), this.tiles = this.tiles.sort(this.SortBy(this.sortFacet, !1, function (e) {
            return $.isNumeric(e) || e.getDate ? e : e.toUpperCase ? e.toUpperCase() : e
        }));
        var s = 0;
        this.currentWidth != this.width && !this.initialise && (this.selected = selectedItem = null, this.selectedItem = null, $.publish("/PivotViewer/ZoomController/ZoomAndCentre", [{
            x: 0,
            y: 0,
            scale: 1,
            milliseconds: 1e3
        }]), s = 1200), setTimeout(function () {
            for (var e = 0; e < i.tiles.length; e++) {
                var r = 0;
                for (; r < i.tiles[e].Location.length;) {
                    i.tiles[e].Location[r].startx = i.tiles[e].Location[r].x, i.tiles[e].Location[r].starty = i.tiles[e].Location[r].y, i.tiles[e].Location[r].startwidth = i.tiles[e].Location[r].width, i.tiles[e].Location[r].startheight = i.tiles[e].Location[r].height;
                    var s = $.inArray(i.tiles[e].facetItem.Id, t);
                    if (s < 0) {
                        i.SetOuterTileDestination(i.width, i.height, i.tiles[e].Location[r]), i.tiles[e].Location[r].start = null, i.tiles[e].Location[r].animationLength = 1e3, i.tiles[e].Location[r].destinationwidth = i.rowscols != null ? i.rowscols.TileWidth : 1, i.tiles[e].Location[r].destinationheight = i.rowscols != null ? i.rowscols.TileHeight : 1, r++;
                        continue
                    }
                    if (i.tiles[e].Location.length > 0 && i.buckets.length > 0) {
                        var o = !1;
                        for (var u = 0, a = i.buckets.length; u < a; u++) {
                            for (var f = 0, l = i.buckets[u].Items.length; f < l; f++)if (i.buckets[u].Items[f].Id == i.tiles[e].facetItem.Id && i.buckets[u].Items[f].Location == i.tiles[e].Location[r]) {
                                o = !0;
                                break
                            }
                            if (o)break
                        }
                        if (!o && i.tiles[e].Location.length > 1) {
                            i.tiles[e].Location.splice(r, 1);
                            for (var c = 0; c < i.tiles[e].Location.length; c++)i.tiles[e].Location[c].valueOrdinal = c;
                            continue
                        }
                    }
                    r++
                }
            }
            $.publish("/PivotViewer/TileController/Animate", null);
            var h = t.length == i.tiles.length ? 0 : 500;
            setTimeout(function () {
                i.buckets = i.Bucketize(i.tiles, i.currentFilter, n, i.sortFacet), i.columnWidth = (i.width - i.offsetX) / i.buckets.length, i.canvasHeightUIAdjusted = i.height - i.bucketUIHeight, i.InitUI(), i.rowscols = i.GetRowsAndColumns(i.columnWidth - 2, i.canvasHeightUIAdjusted, i.ratio, i.bigCount), i.SetVisibleTileGraphPositions(i.rowscols, i.offsetX, i.offsetY, !0, !1, 1e3), $.publish("/PivotViewer/TileController/Animate", null)
            }, h)
        }, s), this.initialise = !1
    }, GetUI: function () {
        return Modernizr.canvas ? "<div class='pv-viewarea-graphview-overlay'></div>" : "<div class='pv-viewpanel-unabletodisplay'><h2>Unfortunately this view is unavailable as your browser does not support this functionality.</h2>Please try again with one of the following supported browsers: IE 9+, Chrome 4+, Firefox 2+, Safari 3.1+, iOS Safari 3.2+, Opera 9+<br/><a href='http://caniuse.com/#feat=canvas'>http://caniuse.com/#feat=canvas</a></div>"
    }, GetButtonImage: function () {
        return "/images/GraphView.png"
    }, GetButtonImageSelected: function () {
        return "/images/GraphViewSelected.png"
    }, GetViewName: function () {
        return "Graph View"
    }, SetVisibleTileGraphPositions: function (e, t, n, r, i, s) {
        var o = i ? this.rowscols.Columns : e.Columns;
        i || (this.rowscols = e);
        for (var u = 0; u < this.buckets.length; u++) {
            var a = 0, f = 0;
            for (var l = 0, c = this.buckets[u].Items.length; l < c; l++)r && (this.buckets[u].Items[l].Location.startx = this.buckets[u].Items[l].Location.x, this.buckets[u].Items[l].Location.starty = this.buckets[u].Items[l].Location.y, this.buckets[u].Items[l].Location.startwidth = this.buckets[u].Items[l].Location.width, this.buckets[u].Items[l].Location.startheight = this.buckets[u].Items[l].Location.height), this.buckets[u].Items[l].Location.destinationwidth = e.TileWidth, this.buckets[u].Items[l].Location.destinationheight = e.TileHeight, this.buckets[u].Items[l].Location.destinationx = u * this.columnWidth + a * e.TileWidth + t, this.buckets[u].Items[l].Location.destinationy = this.canvasHeightUIAdjusted - e.TileHeight - f * e.TileHeight + n, this.buckets[u].Items[l].Location.start = null, this.buckets[u].Items[l].Location.animationLength = s, a == o - 1 ? (a = 0, f++) : a++
        }
    }, InitUI: function () {
        var e = [];
        this.bigCount = 0;
        for (var t = 0; t < this.buckets.length; t++) {
            var n = this.buckets[t].range[0], r = this.buckets[t].range[this.buckets[t].range.length - 1], i = t % 2 == 0 ? "graphview-bucket-dark" : "graphview-bucket-light";
            e[t] = "<div class='pv-viewarea-graphview-overlay-bucket " + i + "' id='pv-viewarea-graphview-overlay-bucket-" + t + "' style='width: " + (Math.floor(this.columnWidth) - 4) + "px; height:" + this.height + "px; left:" + (t * this.columnWidth - 2) + "px;'>";
            var s = this.buckets[t].Items.length.toString().length * 6 + 10;
            n == r ? e[t] += "<div class='pv-viewarea-graphview-overlay-buckettitle' style='top: " + (this.canvasHeightUIAdjusted + 4) + "px;'><span class='pv-viewarea-graphview-overlay-bucketcount'>" + this.buckets[t].Items.length + "</span>" + "<span class='pv-viewarea-graphview-overlay-bucketname' style='margin-left: " + s + "px; width: " + (Math.floor(this.columnWidth) - 4 - s) + "px'>" + n + "</span></div></div>" : e[t] += "<div class='pv-viewarea-graphview-overlay-buckettitle' style='top: " + (this.canvasHeightUIAdjusted + 4) + "px;'><span class='pv-viewarea-graphview-overlay-bucketcount'>" + this.buckets[t].Items.length + "</span>" + "<span class='pv-viewarea-graphview-overlay-bucketname' style='margin-left: " + s + "px; width: " + (Math.floor(this.columnWidth) - 4 - s) + "px'>" + n + "<br/>to<br/>" + r + "</span></div></div>", this.bigCount < this.buckets[t].Items.length && (this.bigCount = this.buckets[t].Items.length)
        }
        var o = $(".pv-viewarea-graphview-overlay");
        o.css("left", this.offsetX + "px"), o.fadeOut("slow", function () {
            $(this).empty().append(e.join("")).fadeIn("slow")
        })
    }, Bucketize: function (e, t, n, r) {
        var i = !1, s = !1;
        for (var o in e) {
            var u = e[o].facetItem.FindFacetByName(r);
            if (u && u.length > 0) {
                u[0].Value.getDate ? i = !0 : u[0].Value.toFixed && (s = !0);
                break
            }
        }
        return i ? this.BucketizeDateCategories(e, t, n, r) : s ? this.BucketizeNumericCategories(e, t, n, r) : this.BucketizeNominalCategories(e, t, n, r)
    }, BucketizeNumericCategories: function (e, t, n, r) {
        var i = [], s = [], o = [];
        for (var u = 0; u < e.length; u++)if ($.inArray(e[u].facetItem.Id, t) >= 0) {
            var a = !1;
            for (var f in e[u].facetItem.Facets) {
                var l = e[u].facetItem.FindFacetByName(f);
                if (l && l.length > 0) {
                    for (var c = 0, h = l.length; c < h; c++) {
                        if (!l[c])continue;
                        var p = l[c].Value;
                        if (n.length > 0)for (var d = 0, v = n.length; d < v; d++)f == n[d].facet && $.inArray(p, n[d].facetValue) >= 0 && (a = !0, f == r && o.push(p)); else a = !0
                    }
                    if (!a)continue
                }
            }
            if (!a)continue;
            var l = e[u].facetItem.FindFacetByName(r);
            if (l != undefined && l.length > 0)for (var c = 0, h = l.length; c < h; c++) {
                var p = l[c].Value;
                if (n.length > 0 && o.length > 0 && $.inArray(p, o) < 0)continue;
                s.push(p)
            }
        }
        var m = PivotViewer.Utils.Histogram(s), g = m.Precision < 0 ? -m.Precision : 0, y = !1;
        if (m.Histogram.length === 1 && m.Histogram[0].length === 1)i.push({
            Items: [],
            range: [m.Histogram[0][0]]
        }), y = !0; else for (var u = 0; u < m.Histogram.length; u++) {
            var b = m.Histogram[u];
            b.push(Number((m.Min + m.StepSize * u).toFixed(g))), b.push(Number((m.Min + m.StepSize * (u + 1)).toFixed(g))), i.push({
                Items: [],
                range: b.sort(function (e, t) {
                    return e - t
                })
            })
        }
        for (var u = 0; u < e.length; u++)if ($.inArray(e[u].facetItem.Id, t) >= 0) {
            var w = !1, l = e[u].facetItem.FindFacetByName(r);
            if (l && l.length > 0) {
                w = !0;
                for (var c = 0, h = l.length; c < h; c++) {
                    var p = l[c].Value;
                    if (n.length > 0 && o.length > 0 && $.inArray(p, o) < 0)continue;
                    c >= e[u].Location.length && this.AddNewTileLocation(e[u]);
                    for (var E = 0; E < i.length; E++) {
                        var S = i[E].range;
                        if ($.inArray(p, S) >= 0) {
                            if (E < i.length - 1 && p != S[S.length - 1] || y) {
                                i[E].Items.push({Id: e[u].facetItem.Id, Location: e[u].Location[c]});
                                break
                            }
                            if (E === i.length - 1) {
                                i[E].Items.push({Id: e[u].facetItem.Id, Location: e[u].Location[c]});
                                break
                            }
                        }
                    }
                }
            }
            if (!w) {
                var x = "(no info)";
                i[i.length - 1].range[0] === x ? i[i.length - 1].Items.push({
                    Id: e[u].facetItem.Id,
                    Location: e[u].Location[0]
                }) : i.push({Items: [{Id: e[u].facetItem.Id, Location: e[u].Location[0]}], range: [x]})
            }
        }
        return i.sort(function (e, t) {
            return e.range[0] == "(no info)" ? -1 : t.range[0] == "(no info)" ? 1 : e.range[0] - t.range[0]
        }), i
    }, BucketizeNominalCategories: function (e, t, n, r) {
        var i = [];
        for (var s = 0; s < e.length; s++)if ($.inArray(e[s].facetItem.Id, t) >= 0) {
            var o = !1, u = [];
            for (var a in e[s].facetItem.Facets) {
                var f = e[s].facetItem.FindFacetByName(a);
                if (f && f.length > 0) {
                    for (var l = 0, c = f.length; l < c; l++) {
                        if (!f[l])continue;
                        var h = f[l].Value;
                        if (n.length > 0)for (var p = 0, d = n.length; p < d; p++)a == n[p].facet && $.inArray(h, n[p].facetValue) >= 0 && (o = !0, a == r && u.push(h)); else o = !0
                    }
                    if (!o)continue
                }
            }
            if (!o)continue;
            var v = !1, f = e[s].facetItem.FindFacetByName(r);
            if (f != undefined && f.length > 0) {
                v = !0;
                for (var l = 0, c = f.length; l < c; l++) {
                    var h = f[l].Value;
                    if (n.length > 0 && u.length > 0 && $.inArray(h, u) < 0)continue;
                    l >= e[s].Location.length && this.AddNewTileLocation(e[s]);
                    var m = !1;
                    for (var g = 0; g < i.length; g++)i[g].range[0] == h && (i[g].Items.push({
                        Id: e[s].facetItem.Id,
                        Location: e[s].Location[l]
                    }), m = !0);
                    m || i.push({Items: [{Id: e[s].facetItem.Id, Location: e[s].Location[l]}], range: [h]})
                }
            }
            if (!v) {
                var y = "(no info)", h = y, m = !1;
                for (var l = 0; l < i.length; l++)i[l].range[0] == h && (i[l].Items.push({
                    Id: e[s].facetItem.Id,
                    Location: e[s].Location[0]
                }), m = !0);
                m || i.push({Items: [{Id: e[s].facetItem.Id, Location: e[s].Location[0]}], range: [h]})
            }
        }
        i.sort(function (e, t) {
            return e.range[0] < t.range[0] ? -1 : e.range[0] > t.range[0] ? 1 : 0
        });
        var b = 0;
        while (i.length > 8)if (b < i.length - 1) {
            for (var s = 0; s < i[b + 1].Items.length; s++) {
                var m = !1;
                for (var w = 0; w < i[b].Items.length; w++)i[b].Items[w].Id == i[b + 1].Items[s].Id && (m = !0);
                if (m)continue;
                i[b].Items.push(i[b + 1].Items[s])
            }
            for (var s = 0; s < i[b + 1].range.length; s++)$.inArray(i[b + 1].range[s], i[b].range) < 0 && i[b].range.push(i[b + 1].range[s]);
            i.splice(b + 1, 1), b++
        } else b = 0;
        return i
    }, BucketizeDateCategories: function (e, t, n, r) {
        var i = [], s = [];
        for (var o = 0; o < e.length; o++)if ($.inArray(e[o].facetItem.Id, t) >= 0) {
            var u = e[o].facetItem.FindFacetByName(r);
            if (u != undefined && u.length > 0)for (var a = 0; a < u.length; a++)a >= e[o].Location.length && this.AddNewTileLocation(e[o]), s.push({
                Date: u[a].Value,
                Id: e[o].facetItem.Id,
                Location: e[o].Location[a]
            })
        }
        s = s.sort(function (e, t) {
            return e.Date < t.Date ? -1 : e.Date > t.Date ? 1 : 0
        });
        var f = s[0].Date.getFullYear(), l = s[s.length - 1].Date.getFullYear();
        if (l - f == 0)if (s[s.length - 1].Date.getMonth() - s[0].Date.getMonth() == 0)if (s[s.length - 1].Date.getDate() - s[0].Date.getDate() < 16)for (var c in s) {
            var h = !1, p = PivotViewer.Utils.FormatDate(s[c].Date, "MMMM dd dddd yyyy");
            for (var d in i)p == i[d].range[0] && (i[d].Items.push({Id: s[c].Id, Location: s[c].Location}), h = !0);
            h || i.push({Items: [{Id: s[c].Id, Location: s[c].Location}], range: [p]})
        } else for (var c in s) {
            var h = !1, v = new Date(s[c].Date.getFullYear(), s[c].Date.getMonth() + 1, 1), m = s[c].Date.getDate() < 16 ? PivotViewer.Utils.FormatDate(s[c].Date, "MMMM 1 yyyy") + " - " + PivotViewer.Utils.FormatDate(s[c].Date, "MMMM 16 yyyy") : PivotViewer.Utils.FormatDate(s[c].Date, "MMMM 16 yyyy") + " - " + PivotViewer.Utils.FormatDate(v, "MMMM d yyyy");
            for (var d in i)m == i[d].range[0] && (i[d].Items.push({Id: s[c].Id, Location: s[c].Location}), h = !0);
            h || i.push({Items: [{Id: s[c].Id, Location: s[c].Location}], range: [m]})
        } else {
            for (var g in PivotViewer.Utils.MonthNames)i.push({
                Items: [],
                range: [PivotViewer.Utils.MonthNames[g] + " " + f]
            });
            for (var c in s) {
                var h = !1, y = PivotViewer.Utils.FormatDate(s[c].Date, "MMMM yyyy");
                for (var d in i)y == i[d].range[0] && (i[d].Items.push({Id: s[c].Id, Location: s[c].Location}), h = !0);
                h || i.push({Items: [{Id: s[c].Id, Location: s[c].Location}], range: [y]})
            }
        } else if (l - f > 0 && l - f < 11)for (var c in s) {
            var h = !1, b = s[c].Date.getFullYear().toString();
            for (var d in i)b == i[d].range[0] && (i[d].Items.push({Id: s[c].Id, Location: s[c].Location}), h = !0);
            h || i.push({Items: [{Id: s[c].Id, Location: s[c].Location}], range: [b]})
        } else if (l - f > 10 && l - f < 101)for (var c in s) {
            var h = !1, w = Math.floor(s[c].Date.getFullYear() / 10) * 10 + "s";
            for (var d in i)w == i[d].range[0] && (i[d].Items.push({Id: s[c].Id, Location: s[c].Location}), h = !0);
            h || i.push({Items: [{Id: s[c].Id, Location: s[c].Location}], range: [w]})
        } else if (l - f > 101)for (var c in s) {
            var h = !1, E = PivotViewer.Utils.GetNumberOrdinal(Math.floor(s[c].Date.getFullYear() / 100) + 1) + " century";
            for (var d in i)E == i[d].range[0] && (i[d].Items.push({Id: s[c].Id, Location: s[c].Location}), h = !0);
            h || i.push({Items: [{Id: s[c].Id, Location: s[c].Location}], range: [E]})
        }
        return i
    }, AddNewTileLocation: function (e) {
        var t = new PivotViewer.Views.TileLocation;
        t.tileId = e.facetItem.Img, t.valueOrdinal = e.Location.length - 1, e.Location.length > 0 ? (t.startx = t.x = e.Location[0].startx, t.starty = t.y = e.Location[0].starty, t.startwidth = t.width = e.Location[0].startwidth, t.startheight = t.height = e.Location[0].startheight) : this.SetInitialTile(t, this.width / 2, this.height / 2), e.Location.push(t)
    }, GoToNextTile: function (e) {
        if (this.selectedItem != null) {
            var t = this.selectedItem.bucket, n = this.selectedItem.item, r = 0, i = 0, s = null;
            if (e)n + 1 < this.buckets[t].Items.length ? s = this.buckets[t].Items[n + 1].Location : t + 1 < this.buckets.length ? s = this.buckets[t + 1].Items[0].Location : s = this.buckets[0].Items[0].Location; else if (n - 1 > -1)s = this.buckets[t].Items[n - 1].Location; else if (t - 1 > -1) {
                var t = this.buckets[t - 1];
                s = t.Items[t.Items.length - 1].Location
            } else {
                var t = this.buckets[this.buckets.length - 1];
                s = t.Items[t.Items.length - 1].Location
            }
            s != null && (r = s.x + s.width / 2, i = s.y + s.height / 2), $.publish("/PivotViewer/Views/Canvas/Click", [{
                x: r,
                y: i
            }])
        }
    }
}), PivotViewer.Views.IImageController = Object.subClass({
    init: function () {
    }, Setup: function (e) {
    }, GetImagesAtLevel: function (e, t, n, r) {
    }, GetImageDimensionsAtLevel: function (e, t) {
    }, Width: 0, Height: 0
}), PivotViewer.Views.LoadImageSetHelper = Object.subClass({
    init: function (e, t) {
        this.Images = [], this._loadCount = 0, this._loaded = 0, this._imgSetNotifyIds = [e], this._imageSources = t;
        for (var n = 0; n < t.length; n++)this.Images[n] = []
    }, LoadImages: function (e) {
        var t = this;
        e || (e = {startX: 0, endX: 1, startY: 0, endY: 1});
        for (var n = e.startX; n < e.endX; n++)for (var r = e.startY; r < e.endY; r++)if (!this.Images[n][r]) {
            var i = new Image;
            i.loaded || (i.loaded = !1), i.src = this._imageSources[n][r], i.onload = function () {
                this.loaded = !0;
                for (var e = 0; e < t._imgSetNotifyIds.length; e++)$.publish("/PivotViewer/Views/Tile/Update/" + t._imgSetNotifyIds[e], null)
            }, this.Images[n][r] = i
        }
    }, GetImages: function () {
        return this.Images
    }, IsLoaded: function () {
        return this._loadCount != 0 && this._loaded == this._loadCount ? !0 : !1
    }, AddNotificationId: function (e) {
        var t = !1;
        for (var n = 0, r = this._imgSetNotifyIds.length; n < r; n++)if (this._imgSetNotifyIds[n] == e) {
            t = !0;
            break
        }
        t || this._imgSetNotifyIds.push(e)
    }
}), PivotViewer.Views.DeepZoomImageController = PivotViewer.Views.IImageController.subClass({
    init: function (e) {
        this._items = [], this._collageItems = [], this._baseUrl = "", this._collageMaxLevel = 0, this._collageTileSize = 0, this._tileSize = 256, this._maxLevel = 0, this._zooming = !1;
        var t = this;
        this._fileSuffix = "_files", e !== undefined && e !== null && (this._fileSuffix = e), $.subscribe("/PivotViewer/ImageController/Zoom", function (e) {
            t._zooming = e
        })
    }, Setup: function (e) {
        this._baseUrl = e.substring(0, e.lastIndexOf("/")), this._collageUrl = e.substring(e.lastIndexOf("/") + 1).replace(".xml", this._fileSuffix).replace(".dzc", this._fileSuffix);
        var t = this;
        $.ajax({
            type: "GET", url: e, dataType: "xml", success: function (e) {
                var n = $(e).find("Collection");
                n.length === 1 && (t._collageMaxLevel = parseInt(n.attr("MaxLevel"), 10), t._collageTileSize = parseFloat(n.attr("TileSize")), t._collageTileFormat = n.attr("Format"));
                var r = $(e).find("I");
                if (r.length === 0)return;
                var i = $(r[0]).find("Size");
                if (i.length > 0) {
                    t.Width = parseInt(i.attr("Width"), 10), t.Height = parseInt(i.attr("Height"), 10);
                    var s = t.Width > t.Height ? t.Width : t.Height;
                    t._maxLevel = Math.ceil(Math.log(s) / Math.log(2))
                }
                var o = $(r[0]).attr("Source"), u = o.indexOf("http") >= 0 ? o : t._baseUrl + "/" + o;
                $.ajax({
                    type: "GET", url: u, dataType: "xml", success: function (e) {
                        var n = $(e).find("Image");
                        if (n.length === 0)return;
                        var r = $(n[0]);
                        t._tileSize = parseInt(r.attr("TileSize")), t._tileFormat = r.attr("Format");
                        var i = r.children().first();
                        t.Width = parseInt(i.attr("Width"), 10), t.Height = parseInt(i.attr("Height"), 10);
                        var s = t.Width > t.Height ? t.Width : t.Height;
                        t._maxLevel = Math.ceil(Math.log(s) / Math.log(2))
                    }, complete: function (e, n) {
                        for (var i = 0; i < r.length; i++) {
                            var s = $(r[i]).attr("Source"), o = $(r[i]).attr("Id"), u = $(r[i]).attr("N"), a = s.substring(s.lastIndexOf("/") + 1).replace(/\.xml/gi, "").replace(/\.dzi/gi, ""), f = s.substring(0, s.lastIndexOf("/"));
                            f.length > 0 && (f += "/");
                            var l = t.Width, c = t.Height, h = $(r[i]).children().first();
                            if (h != null)var l = parseInt(h.attr("Width")), c = parseInt(h.attr("Height"));
                            t.Width = t.Width < l ? l : t.Width, t.Height = t.Height < c ? c : t.Height;
                            var p = new PivotViewer.Views.DeepZoomItem(o, a, u, f);
                            p.Width = l, p.Height = c;
                            var d = l > c ? l : c;
                            p.MaxLevel = Math.ceil(Math.log(d) / Math.log(2)), t._items.push(p)
                        }
                        var v = t.Width > t.Height ? t.Width : t.Height;
                        t._maxLevel = Math.ceil(Math.log(v) / Math.log(2)), $.publish("/PivotViewer/ImageController/Collection/Loaded", null)
                    }, error: function (e, t, n) {
                        $(".pv-loading").remove()
                    }
                })
            }, error: function (e, t, n) {
                $(".pv-loading").remove();
                var r = "";
                r += "Error loading from DeepZoom Cache\r\n\r\n", r = r + "URL        : " + this.url + "\r\n", r = r + "Statuscode : " + e.status + "\r\n", r = r + "Details    : " + n + "\r\n", r += "\r\nPivot Viewer cannot continue until this problem is resolved\r\r", Debug.Alert(r)
            }
        })
    }, GetImageDimensionsAtLevel: function (e, t) {
        var n = e.Img;
        for (var r = 0; r < this._items.length; r++)if (this._items[r].ItemId == n) {
            var i = t > this._items[r].MaxLevel ? this._items[r].MaxLevel : t, s = this.GetLevelSlices(this._items[r], i);
            return {width: s.width, height: s.height}
        }
        return null
    }, GetImagesAtLevel: function (e, t, n) {
        var r = e.Img;
        t = t > this._maxLevel ? this._maxLevel : t, t = t <= 0 ? 0 : t;
        for (var i = 0; i < this._items.length; i++)if (this._items[i].ItemId == r) {
            if (t <= this._collageMaxLevel) {
                var s = [], o = this.GetCollageImage(this._items[i], t);
                if (o.incomplete)for (var u = t - 1; u >= 0; u--)if (this._collageItems[u]) {
                    var a = this.GetCollageImage(this._items[i], u);
                    s.push(a.Images);
                    break
                }
                return s.push(o.Images), s
            }
            var f = t > this._items[i].MaxLevel ? this._items[i].MaxLevel : t, l = "";
            this._items[i].BasePath.indexOf("http") >= 0 ? l = this._items[i].BasePath + this._items[i].DZId + this._fileSuffix + "/" : l = this._baseUrl + "/" + this._items[i].BasePath + this._items[i].DZId + this._fileSuffix + "/";
            var c = this.GetLevelSlices(this._items[i], f);
            if (!this._items[i].Levels[f] && !this._zooming) {
                var h = this.GetImageList(c, l + f + "/"), p = new PivotViewer.Views.LoadImageSetHelper(r, h);
                this._items[i].Levels[f] = p
            }
            var d = c.width / n.tileWidth, v = c.height / n.tileHeight;
            n.width *= d, n.height *= v, n.x *= d, n.y *= v;
            var m = this.GetLevelMask(c, n);
            this._items[i].Levels[f].LoadImages(m);
            var s = [], o = this.GetLevelImageArray(this._items[i], f, c);
            if (o.incomplete)for (var u = f - 1; u >= 0; u--)if (u <= this._collageMaxLevel) {
                if (this._collageItems[u]) {
                    var a = this.GetCollageImage(this._items[i], u);
                    s.push(a.Images);
                    break
                }
            } else if (this._items[i].Levels[u]) {
                var g = this.GetLevelSlices(this._items[i], u), a = this.GetLevelImageArray(this._items[i], u, g);
                s.push(a.Images);
                break
            }
            return s.push(o.Images), s.length == 2 || !o.incomplete ? s : (o = this.GetCollageImage(this._items[i], this._collageMaxLevel), s.push(o.Images), s)
        }
        return null
    }, GetLevelSlices: function (e, t) {
        var n = Math.ceil(e.Width / Math.pow(2, e.MaxLevel - t)), r = Math.ceil(e.Height / Math.pow(2, e.MaxLevel - t)), i = Math.ceil(n / this._tileSize), s = Math.ceil(r / this._tileSize);
        return {width: n, height: r, hSlices: i, vSlices: s}
    }, GetLevelMask: function (e, t) {
        var n = Math.floor(t.x / this._tileSize), r = Math.floor(t.y / this._tileSize), i = Math.ceil(t.width / this._tileSize) + n, s = Math.ceil(t.height / this._tileSize) + r;
        return {startX: n, endX: i, startY: r, endY: s}
    }, GetImageList: function (e, t) {
        var n = [];
        for (var r = 0; r < e.hSlices; r++) {
            n[r] = [];
            for (var i = 0; i < e.vSlices; i++)n[r][i] = t + r + "_" + i + "." + (this._tileFormat ? this._tileFormat : this._collageTileFormat)
        }
        return n
    }, GetLevelImageArray: function (e, t, n) {
        var r = !1, i = e.Levels[t].GetImages(), s = [];
        for (var o = 0, u = n.hSlices; o < u; o++) {
            s[o] = [];
            for (var a = 0, f = n.vSlices; a < f; a++) {
                var l = new PivotViewer.Views.DeepZoomImage;
                i[o][a] && i[o][a].loaded ? (l.image = i[o][a], l.width = i[o][a].width, l.height = i[o][a].height) : (l.width = (o + 1) * this._tileSize > n.width ? n.width - o * this._tileSize : this._tileSize, l.height = (a + 1) * this._tileSize > n.height ? n.height - a * this._tileSize : this._tileSize, o < u - 1 && (l.width += 1), o > 0 && (l.width += 1), a < f - 1 && (l.height += 1), a > 0 && (l.height += 1), r = !0), l.level = t == e.MaxLevel ? 999 : t, s[o].push(l)
            }
        }
        return {Images: s, incomplete: r}
    }, GetCollageImage: function (e, t) {
        var n = e.DZN.toString(2), r = "0", i = "0";
        for (var s = 0; s < n.length; s++)s % 2 == 0 ? r += n[s] : i += n[s];
        var o = r.length != i.length ? parseInt(r, 2) : parseInt(i, 2), u = r.length != i.length ? parseInt(i, 2) : parseInt(r, 2), a = Math.floor(o * Math.pow(2, t) / this._collageTileSize), f = Math.floor(u * Math.pow(2, t) / this._collageTileSize);
        this._collageItems[t] == undefined && (this._collageItems[t] = []), this._collageItems[t][a] == undefined && (this._collageItems[t][a] = []);
        if (this._collageItems[t][a][f] == undefined) {
            var l = this._baseUrl + "/" + this._collageUrl + "/" + t + "/" + a + "_" + f + "." + this._collageTileFormat, c = new PivotViewer.Views.LoadImageSetHelper(e.ItemId, [[l]]);
            c.LoadImages({startX: 0, endX: 1, startY: 0, endY: 1}), this._collageItems[t][a][f] = c
        } else this._collageItems[t][a][f].AddNotificationId(e.ItemId);
        var h = [], p = !1, d = this._collageItems[t][a][f].GetImages();
        for (var v = 0, m = d.length; v < m; v++) {
            h[v] = [];
            for (var g = 0, y = d[v].length; g < y; g++) {
                var b = new PivotViewer.Views.DeepZoomImage;
                d[v][g].loaded ? b.image = d[v][g] : p = !0;
                var w = e.Width / Math.pow(2, e.MaxLevel - t), E = e.Height / Math.pow(2, e.MaxLevel - t);
                b.width = w > 0 ? w : 1, b.height = E > 0 ? E : 1, a = Math.floor(o * Math.pow(2, t) / this._collageTileSize), f = Math.floor(u * Math.pow(2, t) / this._collageTileSize), b.yOffset = u * Math.pow(2, t) - f * this._collageTileSize, b.xOffset = o * Math.pow(2, t) - a * this._collageTileSize, b.level = t, h[v].push(b)
            }
        }
        return {Images: h, incomplete: p}
    }
}), PivotViewer.Views.DeepZoomItem = Object.subClass({
    init: function (e, t, n, r) {
        this.ItemId = e, this.DZId = t, this.DZN = parseInt(n), this.BasePath = r, this.Levels = [], this.Width = 0, this.Height = 0, this.MaxLevel = 0
    }
}), PivotViewer.Views.DeepZoomImage = Object.subClass({
    init: function (e) {
        this.image = e, this.xOffset = 0, this.yOffset = 0, this.width = 0, this.height = 0, this.level = 0
    }
}), PivotViewer.Views.TileController = Object.subClass({
    init: function (e, t, n) {
        this._tiles = [], this._helpers = [], this._helperText = "", this._easing = new Easing.Easer({
            type: "circular",
            side: "both"
        }), this._imageController = e, this._breaks = !0, this._animateBlank = t, this._zoomHelperMaxLevel = n, this._dragging = !1, this._zoomContext = undefined, this._imageData = null, this._zoomDetails = null, this._prevScale = 1, this._currentWidth = 0, this._currentHeight = 0, this._currentOffsetX = 0, this._currentOffsetY = 0, this._biggestWidth = 0, this._biggestHeight = 0, this._lastZoomTimer = null, this._zoomStart = null, this._zoomEnd = null, this._zoomController = undefined, this._last = !1;
        var r = this;
        $.subscribe("/PivotViewer/TileController/Animate", function (e) {
            e !== undefined && e !== null && (e.Drag !== undefined && e.Drag !== null ? r._dragging = e.Drag : r._dragging = !1, e.last !== undefined && e.last !== null && e.last === !0 ? r._last = !0 : r._last = !1), r._breaks && r.BeginAnimation()
        }), $.subscribe("/PivotViewer/Views/Canvas/Zoom", function (e) {
            r._zoomController = e;
            if (r._imageData === null || r._imageData === undefined)r._imageData = r._canvasContext.getImageData(0, 0, r._canvasContext.canvas.width, r._canvasContext.canvas.height), r._zoomContext.putImageData(r._imageData, 0, 0), r._zoomController.setMaxScale(r._tiles[0].Location[0].width, r._tiles[0].Location[0].height);
            r._isZooming = !0, r._zoomController.scaleTime !== null && r._zoomController.scaleTime !== undefined ? (r._zoomStart = PivotViewer.Utils.Now(), r._zoomEnd = r._zoomStart + r._zoomController.scaleTime) : (r._zoomStart = null, r._zoomEnd = null)
        }), $.subscribe("/PivotViewer/Views/Canvas/Drag", function (e) {
            r._zoomController = e, r._isZooming = !0
        })
    }, initTiles: function (e, t, n) {
        this._canvasContext = n, this._zoomContext = $(".pv-viewarea-canvas-zoom")[0].getContext("2d"), this._currentWidth = n.canvas.width, this._currentHeight = n.canvas.height;
        for (var r = 0; r < e.length; r++) {
            var i = new PivotViewer.Views.Tile(this._imageController, e[r]);
            i.CollectionRoot = t.replace(/\\/gi, "/").replace(/\.xml/gi, ""), i.context = this._canvasContext, i._selected = !1;
            var s = new PivotViewer.Views.TileLocation;
            s.tileId = e[r].Img, i.Location = [s], this._tiles.push(i)
        }
        return this._tiles
    }, AnimateTiles: function () {
        var e = this;
        this._started = !0;
        var t = !1, n = !0;
        this._biggestWidth = 0, this._biggestHeight = 0, $.publish("/PivotViewer/TileController/Animating", null);
        if (this._tiles.length > 0 && this._tiles[0].context != null) {
            var r = !1;
            for (var i = 0; i < this._tiles.length; i++)for (var s = 0, o = this._tiles[i].Location.length; s < o; s++) {
                this._tiles[i].Location[s].start == null && (this._tiles[i].Location[s].start = PivotViewer.Utils.Now(), this._tiles[i].Location[s].end = this._tiles[i].Location[s].start + this._tiles[i].Location[s].animationLength);
                var u = PivotViewer.Utils.Now() - this._tiles[i].Location[s].start, a = this._tiles[i].Location[s].end - this._tiles[i].Location[s].start;
                if (u < a) {
                    t = !0;
                    if (this._tiles[i].Location[s].x != this._tiles[i].Location[s].destinationx || this._tiles[i].Location[s].y != this._tiles[i].Location[s].destinationy)r = !0;
                    this._tiles[i].Location[s].x = this._easing.ease(u, this._tiles[i].Location[s].startx, this._tiles[i].Location[s].destinationx - this._tiles[i].Location[s].startx, a), this._tiles[i].Location[s].y = this._easing.ease(u, this._tiles[i].Location[s].starty, this._tiles[i].Location[s].destinationy - this._tiles[i].Location[s].starty, a);
                    if (this._tiles[i].Location[s].width != this._tiles[i].Location[s].destinationWidth || this._tiles[i].Location[s].height != this._tiles[i].Location[s].destinationHeight)r = !0;
                    this._tiles[i].Location[s].width = this._easing.ease(u, this._tiles[i].Location[s].startwidth, this._tiles[i].Location[s].destinationwidth - this._tiles[i].Location[s].startwidth, a), this._tiles[i].Location[s].height = this._easing.ease(u, this._tiles[i].Location[s].startheight, this._tiles[i].Location[s].destinationheight - this._tiles[i].Location[s].startheight, a)
                } else e._dragging && (t = !0, n = !1), this._tiles[i].Location[s].x = this._tiles[i].Location[s].destinationx, this._tiles[i].Location[s].y = this._tiles[i].Location[s].destinationy, this._tiles[i].Location[s].width = this._tiles[i].Location[s].destinationwidth, this._tiles[i].Location[s].height = this._tiles[i].Location[s].destinationheight;
                this._tiles[i].Location[s].x + this._tiles[i].Location[s].width < 0 || this._tiles[i].Location[s].x > this._canvasContext.canvas.width || this._tiles[i].Location[s].y + this._tiles[i].Location[s].height < 0 || this._tiles[i].Location[s].y > this._canvasContext.canvas.height ? this._tiles[i].Location[s].destinationVisible = !1 : this._tiles[i].Location[s].destinationVisible = !0, this._biggestWidth = Math.max(this._tiles[i].Location[s].width, this._biggestWidth), this._biggestHeight = Math.max(this._tiles[i].Location[s].height, this._biggestHeight)
            }
        }
        this._started && !isNaN(u) && !isNaN(a) && !t && (this._breaks = !0, t = !0, this._isZooming || (this._last = !0));
        if (t) {
            this._canvasContext.clearRect(0, 0, this._canvasContext.canvas.width, this._canvasContext.canvas.height);
            var f = 0;
            if (this._zoomHelperMaxLevel > 0)for (var i = 0; i < this._tiles.length; i++)for (var s = 0; s < this._tiles[i].Location.length; s++)if (this._tiles[i].Location[s].destinationVisible) {
                var l = this._tiles[i].Location[s].width > this._tiles[i].Location[s].height ? this._tiles[i].Location[s].width : this._tiles[i].Location[s].height;
                f = Math.ceil(Math.log(l) / Math.log(2));
                break
            }
            clearTimeout(this._lastZoomTimer);
            if (!this._last && (this._zoomHelperMaxLevel === 0 || f <= this._zoomHelperMaxLevel) && this._isZooming && this._imageData != null)this._canvasContext.drawImage(this._zoomContext.canvas, this._zoomController.offsetX, this._zoomController.offsetY, this._zoomController.width, this._zoomController.height), this._isZooming = !1; else for (var i = 0; i < this._tiles.length; i++)for (var s = 0, o = this._tiles[i].Location.length; s < o; s++)this._tiles[i].Location[s].x + this._tiles[i].Location[s].width > 0 && this._tiles[i].Location[s].x < this._canvasContext.canvas.width && this._tiles[i].Location[s].y + this._tiles[i].Location[s].height > 0 && this._tiles[i].Location[s].y < this._canvasContext.canvas.height && (!this._breaks && n && this._animateBlank && !this._dragging ? this._tiles[i].DrawEmpty() : this._tiles[i].Draw(this._dragging));
            this._last || (this._lastZoomTimer = setTimeout(function () {
                $.publish("/PivotViewer/TileController/Animate", [{last: !0}])
            }, 100))
        }
        this._dragging = !1;
        if (!!this._breaks) {
            this._started = !1, this._zoomController != undefined && this._zoomController.scale == 1 && this._last && (this._imageData = this._canvasContext.getImageData(0, 0, this._canvasContext.canvas.width, this._canvasContext.canvas.height), this._zoomContext.putImageData(this._imageData, 0, 0), Debug.Log("snapshot taken")), this._last && $.publish("/PivotViewer/TileController/Animate/End", null), this._last = !1;
            return
        }
        requestAnimFrame(function () {
            e.AnimateTiles()
        })
    }, BeginAnimation: function () {
        !this._started && this._tiles.length > 0 && (this._breaks = !1, this.AnimateTiles())
    }, StopAnimation: function () {
        this._breaks = !0
    }, StartAnimation: function () {
        this._breaks = !1, this.AnimateTiles()
    }, SetLinearEasingBoth: function () {
        this._easing = new Easing.Easer({type: "linear", side: "both"})
    }, SetCircularEasingBoth: function () {
        this._easing = new Easing.Easer({type: "circular", side: "both"})
    }, SetQuarticEasingOut: function () {
        this._easing = new Easing.Easer({type: "quartic", side: "out"})
    }, GetTileRaio: function () {
        return this._imageController.Height / this._imageController.Width
    }, DrawHelpers: function (e) {
        this._helpers = e
    }, DrawHelperText: function (e) {
        this._helperText = e
    }
}), PivotViewer.Views.Tile = Object.subClass({
    init: function (e, t) {
        if (!(this instanceof PivotViewer.Views.Tile))return new PivotViewer.Views.Tile(e);
        this.facetItem = t, this._controller = e, this._imageLoaded = !1, this._level = 0, this._images = null, this._loadedLevels = {};
        var n = this;
        $.subscribe("/PivotViewer/Views/Tile/Update/" + this.facetItem.Img, function (e) {
            n.Draw(!1)
        })
    },
    Draw: function (e) {
        for (var t = 0, n = this.Location.length; t < n; t++) {
            if (!this.Location[t].destinationVisible)continue;
            var r = this.Location[t].width > this.Location[t].height ? this.Location[t].width : this.Location[t].height, i = Math.ceil(Math.log(r) / Math.log(2));
            if (i == Infinity || i == -Infinity)i = 0;
            this._level = i;
            var s = this.Location[t].width * .05 < 1 ? 1 : this.Location[t].width * .05, o = this.Location[t].height * .05 < 1 ? 1 : this.Location[t].height * .05;
            if (this.Location[t].Visible && (!e || this._images == null)) {
                var u = this.Location[t].x >= 0 ? 0 : Math.abs(this.Location[t].x), a = this.Location[t].y >= 0 ? 0 : Math.abs(this.Location[t].y), f = this.Location[t].x < 0 ? this.Location[t].width + this.Location[t].x : this.context.canvas.width - this.Location[t].x;
                f = f > this.context.canvas.width ? this.context.canvas.width : f, f = f > this.Location[t].width ? this.Location[t].width : f;
                var l = this.Location[t].y < 0 ? this.Location[t].height + this.Location[t].y : this.context.canvas.height - this.Location[t].y;
                l = l > this.context.canvas.height ? this.context.canvas.height : l, l = l > this.Location[t].height ? this.Location[t].height : l, this._images = this._controller.GetImagesAtLevel(this.facetItem, this._level, {
                    x: u,
                    y: a,
                    width: f,
                    height: l,
                    tileWidth: this.Location[t].width,
                    tileHeight: this.Location[t].height
                })
            }
            this.Location[t].Visible ? this.DrawLocation(this.Location[t], this._images, s, o) : this.DrawLocation(this.Location[t], null, s, o)
        }
    },
    DrawLocation: function (e, t, n, r) {
        this.context.clearRect(e.x, e.y, e.width, e.height);
        var i = e.width, s = e.height, o = 0, u = 0, a = 0, f = 0, l = 0, c = 0;
        if (t != null) {
            if (typeof t == "function")t(this.facetItem, this.context, e.x + n / 2, e.y + r / 2, e.width - n, e.height - r); else if (typeof t == "object" && t.getContext) {
                var h = e.x + n / 2, p = e.y + r / 2, d = e.width - n, v = e.height - r;
                this.context.drawImage(t, h, p, d > 1 ? d : 1, v > 1 ? v : 1), e.imagewidth = d, e.imageheight = v, e.imagex = h, e.imagey = p
            } else if (t.length > 0) {
                if (t.length == 1) {
                    var m = !1;
                    for (var g = 0; g < t[0].length; g++) {
                        for (var y = 0; y < t[0][g].length; y++)if (t[0][g][y].image) {
                            m = !0;
                            break
                        }
                        if (m)break
                    }
                    m || this.DrawEmpty()
                }
                for (var b = 0; b < t.length; b++) {
                    var w = t[b], s, E = 0, S = 1, x = 0, T = 0;
                    for (var g = 0; g < w.length; g++)x += w[g][0].width;
                    w.length > 1 && (x -= w.length);
                    for (var g = 0; g < w[0].length; g++)T += w[0][g].height;
                    w[0].length > 1 && (T -= w[0].length);
                    var N = (e.width - n) / x, C = (e.height - r) / T;
                    S = Math.min(N, C), i = o = n / 2 + (e.width - (x * S + n)) / 2;
                    var k = !1;
                    for (var g = 0; g < w.length; g++) {
                        s = u = r / 2 + (e.height - (T * S + r)) / 2;
                        var L = g > 0 ? 2 * S : 0;
                        for (var y = 0; y < w[g].length; y++) {
                            var C = w[g][y].height * S, N = w[g][y].width * S, A = y > 0 ? 2 * S : 0;
                            if (C < 0 || N < 0)return;
                            g == 0 && (a += C, f += y > 0 ? A / y : 0), y == 0 && (l += N, c += g > 0 ? L / g : 0), w[g][y].image && (this.context.drawImage(w[g][y].image, w[g][y].xOffset, w[g][y].yOffset, w[g][y].width, w[g][y].height, e.x + i - L, e.y + s - A, N, C), k = !0), s += C > 0 ? C - A : 0
                        }
                        i += w[g][0].width * S - L
                    }
                    !k && b == 0 && this.DrawEmpty(), e.imagewidth = x * S - w.length * S, e.imageheight = T * S - w[0].length * S, e.imagex = e.x + o, e.imagey = e.y + u
                }
            }
        } else this.DrawEmpty();
        if (this.Checked) {
            var O = 4;
            this.context.beginPath();
            var M = e.x + o - O / 2 < e.x + O / 2 ? e.x + O / 2 : e.x + o - O / 2, _ = e.y + u - O / 2 < e.y + O / 2 ? e.y + O / 2 : e.y + u - O / 2, D = l - c + O > e.width ? e.width - O : l - c, P = a - f + O > e.height ? e.height - O : a - f;
            this.context.rect(M, _, D, P), this.context.lineWidth = O, this.context.strokeStyle = "#F50000", this.context.stroke()
        }
    },
    DrawEmpty: function () {
        for (var e = 0, t = this.Location.length; e < t; e++) {
            var n = this.Location[e].width * .05, r = this.Location[e].height * .05;
            this._controller.DrawLevel == undefined ? (this.context.beginPath(), this.context.fillStyle = "#D7DDDD", this.context.fillRect(this.Location[e].x + n / 2, this.Location[e].y + r / 2, this.Location[e].width - n, this.Location[e].height - r), this.context.rect(this.Location[e].x + n / 2, this.Location[e].y + r / 2, this.Location[e].width - n, this.Location[e].height - r), this.context.lineWidth = 1, this.context.strokeStyle = "white", this.context.stroke()) : this._controller.DrawLevel(this.facetItem, this.context, this.Location[e].x + n / 2, this.Location[e].y + r / 2, this.Location[e].width - n, this.Location[e].height - r)
        }
    },
    CollectionRoot: "",
    Location: [],
    now: null,
    end: null,
    animationLength: 0,
    x: 0,
    y: 0,
    startx: 0,
    starty: 0,
    destinationx: 0,
    destinationy: 0,
    width: 0,
    height: 0,
    startwidth: 0,
    startheight: 0,
    destinationwidth: 0,
    destinationheight: 0,
    destinationVisible: !0,
    context: null,
    facetItem: null,
    Checked: !1
}), PivotViewer.Views.TileLocation = Object.subClass({
    valueOrdinal: 0,
    init: function () {
        this._selected = !1
    },
    start: null,
    end: null,
    animationLength: 0,
    x: 0,
    y: 0,
    startx: 0,
    starty: 0,
    destinationx: 0,
    destinationy: 0,
    width: 0,
    height: 0,
    startwidth: 0,
    startheight: 0,
    destinationwidth: 0,
    destinationheight: 0,
    destinationVisible: !0,
    imagex: 0,
    imagey: 0,
    imagewidth: 0,
    imageheight: 0,
    tileId: null,
    Contains: function (e, t) {
        return this.x <= e && this.x + this.width >= e && this.y <= t && this.y + this.height >= t
    },
    Selected: function (e) {
        this._selected = e
    },
    Highlighted: function (e) {
        this._highlighted = e
    },
    Visible: !0
}), PivotViewer.Views.ItemTemplateGetter = Object.subClass({
    init: function (e, t) {
        this.baseTemplatePath = e, this.unknownTemplate = t, this._unavailableTypes = [], this._pendingTypes = []
    }, CreateItemTemplate: function (e) {
        var t = e;
        if ($.inArray(e, this._pendingTypes) >= 0)return;
        if ($.inArray(e, this._unavailableTypes) >= 0) {
            if (!this.unknownTemplate)return;
            t = this.unknownTemplate
        }
        var n = this, r = {};
        r.handleSVG = function (t) {
            $.publish("/PivotViewer/Views/Template/Loaded", [{name: e, template: t}])
        }, r.handleAjaxError = function (t, r, i) {
            $.inArray(e, n._unavailableTypes) === -1 && n._unavailableTypes.push(e), n.CreateItemTemplate(e)
        }, r.updatePending = function () {
            var t = $.inArray(e, n._pendingTypes);
            t >= -1 && n._pendingTypes.splice(t, 1)
        }, $.ajax({
            url: this.baseTemplatePath + "/" + t + ".svg",
            dataType: "text"
        }).done(r.handleSVG).fail(r.handleAjaxError).always(r.updatePending)
    }
}), PivotViewer.UI = Object.subClass({
    init: function (e, t, n, r, i, s, o) {
        this._container = e, this._width = t, this._height = n, this._baseContentPath = r, this._collectionName = i, this._brandImage = s, this._displayFeedback = o, this._mainPanel = null, this._toolbarPanel = null, this._breadcrumb = null, this._filterPanel = null, this._filterPanelAccordion = null, this._filterPanelAccordionWrapper = null, this._accordionItems = 0, this._infoPanel = null, this._canvas = null, this._canvasZoom = null, this._itemAdorner = null, this._itemSelect = null, this._clipboardExport = null, this._feedback = null, this._itemAdornerBorder = 0, this._itemAdornerHide = !1, this._itemSelectBorder = 0, this._itemSelectLocation = null
    }, LoadUI: function () {
        var e = this, t = {};
        t.createToolbar = function (t) {
            e._toolbarPanel = ich.pv_template_toolbar(t), e._container.append(e._toolbarPanel)
        }, t.createMainPanel = function (t) {
            e._mainPanel = ich.pv_template_mainpanel(t), e._container.append(e._mainPanel)
        }, t.createUI = function (n) {
            var r = {
                baseContentPath: e._baseContentPath,
                brandImage: e._brandImage,
                collectionName: e._collectionName,
                width: e._width,
                height: e._height
            };
            e._container.css("height", r.height + "px"), t.createToolbar(r), r.mainPanel = {height: e._height - e._toolbarPanel.outerHeight(!0) - 2}, r.filterPanel = {height: r.mainPanel.height - 13}, r.infoPanel = {height: r.mainPanel.height - 28}, t.createMainPanel(r), e._breadcrumb = $(".pv-toolbarpanel-facetbreadcrumb");
            var i = $(".pv-toolbarpanel-name"), s = i.offset().left + i.width();
            e._breadcrumb.css("width", e._width - s - 445 + "px"), e._canvas = $(".pv-viewarea-canvas"), e._canvasZoom = $(".pv-viewarea-canvas-zoom"), e._filterPanel = $(".pv-filterpanel"), $(".pv-filterpanel-search").css("width", e._filterPanel.width() + "px"), $(".pv-filterpanel-search-autocomplete").hide(), e._filterPanelAccordionWrapper = $(".pv-filterpanel-accordion-wrapper"), e._filterPanelAccordion = $(".pv-filterpanel-accordion"), e._filterPanelAccordionWrapper.css("height", e._filterPanel.height() - $(".pv-filterpanel-search").height() - 50 + "px"), e._infoPanel = $(".pv-infopanel"), e._infoPanel.css("left", e._mainPanel.width() - 205 + "px").hide(), e._itemAdorner = $(".pv-itemadorner"), e._itemAdorner[0].draggable = !1, e._itemAdornerBorder = e._itemAdorner.outerWidth(!0) - e._itemAdorner.width(), e._itemAdorner.hide(), e._itemSelect = $(".pv-itemselect"), e._itemSelect[0].draggable = !1, e._itemSelectBorder = e._itemSelect.outerWidth(!0) - e._itemSelect.width(), e._itemSelect.hide(), e._clipboardExport = $(".pv-filterpanel-export"), e._clipboardExport.hide(), e._feedback = $(".pv-toolbarpanel-feedback"), e._feedback.on("click", function (e) {
                UserVoice.showPopupWidget()
            }), e._displayFeedback || e._feedback.hide(), $.publish("/PivotViewer/UI/Loaded", null)
        }, t.createUI(), $.subscribe("/PivotViewer/TileController/Animating", function (t) {
            e._itemAdorner.hide(), e._itemAdornerHide = !0, e._itemSelect.hide()
        }), $.subscribe("/PivotViewer/TileController/Animate/End", function (t) {
            e._itemAdornerHide = !1, e._itemSelectLocation ? (e._itemSelect.css("width", e._itemSelectLocation.imagewidth - e._itemSelectBorder / 4 + "px").css("height", e._itemSelectLocation.imageheight - e._itemSelectBorder / 4 + "px").css("top", e._itemSelectLocation.imagey - e._itemSelectBorder / 4 + "px").css("left", e._itemSelectLocation.imagex - e._itemSelectBorder / 4 + "px"), e._itemSelect.show()) : (e._itemSelect.hide(), e._itemSelectLocation = null)
        })
    }, Resize: function (e, t) {
        this._width = e, this._height = t, this._container.css("height", this._height - 2 + "px");
        var n = $(".pv-toolbarpanel-name"), r = n.offset().left + n.width();
        this._breadcrumb.css("width", this._width - r - 425 + "px"), this._mainPanel.css("height", this._height - this._toolbarPanel.outerHeight(!0) - 2 + "px").css("width", this._width + "px"), this._filterPanel.css("height", this._mainPanel.height() - 13 + "px"), this.SetFilterPanelHeight(), this._infoPanel.css("left", this._mainPanel.width() - 205 + "px").css("height", this._mainPanel.height() - 28 + "px"), this._canvas.css("height", this._mainPanel.height() + "px").css("width", this._mainPanel.width() + "px");
        var i = this._canvas[0].getContext("2d");
        i.canvas.width = this._mainPanel.width(), i.canvas.height = this._mainPanel.height(), this._canvasZoom.css("height", this._mainPanel.height() + "px").css("width", this._mainPanel.width() + "px");
        var s = this._canvasZoom[0].getContext("2d");
        s.canvas.width = this._mainPanel.width(), s.canvas.height = this._mainPanel.height(), $.publish("/PivotViewer/Views/Resize", [{
            width: this._mainPanel.width(),
            height: this._mainPanel.height()
        }])
    }, DeselectInfoPanel: function () {
        this._infoPanel.fadeOut(), $(".pv-infopanel-heading").text(""), $(".pv-infopanel-details").empty()
    }, MainPanelDimensions: function () {
        var e = this._mainPanel.position();
        return {x: e.left, y: e.top, width: this._mainPanel.width(), height: this._mainPanel.height()}
    }, FilterPanelDimensions: function () {
        var e = this._filterPanel.position();
        return {x: e.left, y: e.top, width: this._filterPanel.width(), height: this._filterPanel.height()}
    }, UpdateBreadcrumbNavigation: function (e) {
        this._breadcrumb.empty();
        if (e.length === 0)return;
        var t = "<div class='pv-toolbarpanel-facetbreadcrumb-separator'>|</div>";
        for (var n = 0; n < e.length; n++)t += "<div class='pv-toolbarpanel-facetbreadcrumb-facet'>" + e[n].facet + ":</div><div class='pv-toolbarpanel-facetbreadcrumb-values'>", e[n].values.length < 4 ? t += e[n].values.join(", ") : t += e[n].values[0] + ", " + e[n].values[1] + ", and " + (e[n].values.length - 2) + " more", t += "</div><div class='pv-toolbarpanel-facetbreadcrumb-separator'>&gt;</div>";
        this._breadcrumb.append(t)
    }, SetFilterPanelHeight: function () {
        this._accordionItems == 0 && (this._accordionItems = this._filterPanelAccordion.find("h3").length);
        var e = this._filterPanel.height() - $(".pv-filterpanel-search").height() - 50, t = this._accordionItems * 40 + 120;
        e = e < t ? t : e, this._filterPanelAccordionWrapper.css("height", e + "px"), this._filterPanelAccordion.accordion("refresh")
    }, SetItemAdorner: function (e, t) {
        if (!e || this._itemAdornerHide) {
            this._itemAdorner.hide();
            return
        }
        var n = e.imagex, r = e.imagey;
        n === 0 && r === 0 && e.imagewidth === 0 && e.imageheight === 0 && (n = e.x, r = e.y);
        var i = e.width, s = e.height;
        e.imagewidth > 0 && e.imagewidth <= e.width ? i = e.imagewidth : n = e.x, e.imageheight > 0 && e.imageheight <= e.height ? s = e.imageheight : r = e.y;
        var o = n - this._itemAdornerBorder / 4, u = r - this._itemAdornerBorder / 4;
        if (Math.round(o) === Math.round(this._itemSelect.css("left").replace("px", "")) && Math.round(u) === Math.round(this._itemSelect.css("top").replace("px", ""))) {
            this._itemAdorner.hide();
            return
        }
        this._itemAdorner.css("width", i - this._itemAdornerBorder / 4 + "px").css("height", s - this._itemAdornerBorder / 4 + "px").css("top", u + "px").css("left", o + "px").empty(), Math.max(e.width, e.height) > 128 && this._itemAdorner.append(t), this._itemAdorner.show()
    }, SetItemSelect: function (e, t) {
        this._itemSelect.empty(), !e || this._itemSelectHide ? (this._itemSelect.hide(), this._itemSelectLocation = null) : (this._itemSelectLocation = e, this._itemSelect.append(t))
    }, ClipboardExport: function (e) {
        e ? this._clipboardExport.show() : this._clipboardExport.hide()
    }
}), function (e) {
    var t = 600, n = 800, r = [], i = [], s = [], o = [], u = [], a = 0, f = [], l = [], c, h, p, d = null, v = !1, m = null, g = {
        View: null,
        Facet: null,
        Filters: []
    }, y = null, b = 0, w = null, E = 1, S = 1, x = "(no info)", T = null, N = null, C = null, k = {
        defaults: {
            ImageController: new PivotViewer.Views.DeepZoomImageController,
            Loader: null,
            ViewerState: "",
            BaseContentPath: "content",
            ItemAdornerTemplate: null,
            ItemSelectedTemplate: null,
            AnimateBlank: !1,
            AllowItemsCheck: !1,
            DateFormat: "mm/dd/yy",
            CopyToClipboard: !1,
            DisplayFeedback: !1,
            ZoomHelperMaxLevel: 0,
            Options: null,
            DragClickThreshold: 15
        }, data: {PivotCollection: null}, init: function (i) {
            y = this, window.console || (window.console = {}), window.console.log || (window.console.log = function () {
            }), y.empty(), r = [], y.addClass("pv-wrapper"), y.parent()[0].nodeName !== "BODY" ? t = y.parent().height() : (t = e(window).height() - this.outerHeight(!0), e("body").css("margin", "0px")), n = y.width(), k.data.PivotCollection = new PivotViewer.Models.Collection;
            if (i.Loader === undefined || i.Loader === null)throw"Collection loader is undefined.";
            if (!(i.Loader instanceof PivotViewer.Models.Loaders.ICollectionLoader))throw"Collection loader does not inherit from PivotViewer.Models.Loaders.ICollectionLoader.";
            if (!(!i.ImageController || i.ImageController instanceof PivotViewer.Views.IImageController))throw"Image Controller does not inherit from PivotViewer.Views.IImageController.";
            if (i.ItemAdornerTemplate && ich && !ich[i.ItemAdornerTemplate])throw"Item adorner template is not set to a valid template id.";
            if (i.ItemSelectedTemplate && ich && !ich[i.ItemSelectedTemplate])throw"Item selected template is not set to a valid template id.";
            i.Options && (_options = i.Options), k.options = e.extend({}, k.defaults, i);
            if (i.ViewerState !== undefined && i.ViewerState !== null) {
                var s = i.ViewerState.split("&");
                for (var o = 0, u = s.length; o < u; o++) {
                    var a = s[o].split("=");
                    if (a.length == 2)if (a[0] == "$view$")g.View = parseInt(a[1]) - 1; else if (a[0] == "$facet0$")g.Facet = PivotViewer.Utils.EscapeItemId(a[1]); else {
                        var f = {Facet: a[0], Predicates: []}, l = a[1].split("_");
                        for (var c = 0, h = l.length; c < h; c++) {
                            var p = l[c].split(".");
                            p.length == 2 && f.Predicates.push({Operator: p[0], Value: p[1]})
                        }
                        g.Filters.push(f)
                    }
                }
            }
            N = new PivotViewer.FacetTypes.FacetTypeController(k.options.BaseContentPath);
            var d = e('link[rel="template"]'), v = 0;
            d.each(function () {
                e.ajax({url: this.href, dataType: "html"}).done(function (t) {
                    e("body").append(t), v++, v === d.length && e.publish("/PivotViewer/Template/Loaded", null)
                })
            }), Image.prototype.loaded || (Image.prototype.loaded = !1)
        }, InitUI: function () {
            T = new PivotViewer.UI(y, n, t, k.options.BaseContentPath, k.data.PivotCollection.CollectionName, k.data.PivotCollection.BrandImage, k.options.DisplayFeedback), T.LoadUI()
        }, InitTileCollection: function () {
            if (k.options.AllowItemsCheck) {
                k.data.PivotCollection.FacetCategories.push(new PivotViewer.Models.FacetCategory("Item Checked", null, PivotViewer.Models.FacetType.Boolean, !0, !1, !1, null));
                for (var r = 0, i = k.data.PivotCollection.Items.length; r < i; r++)k.data.PivotCollection.Items[r].AddFacetValue("Item Checked", new PivotViewer.Models.FacetValue(!1))
            }
            h = new PivotViewer.ZoomController(n, T.MainPanelDimensions().height);
            var s = b;
            p = e(".pv-toolbarpanel-zoomslider"), p.noUiSlider({
                range: [0, 100],
                start: 0,
                step: 1,
                handles: 1,
                slide: function () {
                    var t = e(this).val();
                    e(this).trigger("updatevalue", {value: t})
                }
            }).bind("updatevalue", function (r, i) {
                var o = h.maxScale * i.value * .01;
                o = o < 1 ? 1 : o, h.zoom(n / 2, t / 2, o), e(this).val(i.value), s = i.value
            });
            var o = k.data.PivotCollection.ImageBase;
            o.indexOf("http", 0) >= 0 || o.indexOf("www.", 0) >= 0 || (o = k.data.PivotCollection.CXMLBase.substring(0, k.data.PivotCollection.CXMLBase.lastIndexOf("/") + 1) + o);
            if (!Modernizr.canvas) {
                Debug.Error("Browser does not support the canvas element"), e(".pv-loading").remove();
                var u = {baseContentPath: k.options.BaseContentPath}, a = ich.pv_template_nocanvas(u);
                y.append(a);
                return
            }
            var f = e(".pv-viewarea-canvas")[0].getContext("2d");
            c = new PivotViewer.Views.TileController(k.options.ImageController, k.options.AnimateBlank, k.options.ZoomHelperMaxLevel), l = c.initTiles(k.data.PivotCollection.Items, o, f), k.options.ImageController.Setup(o.replace("\\", "/"))
        }, InitPivotViewer: function () {
            h.maxLevel = k.options.ImageController._maxLevel + 4, C = new PivotViewer.Search.SearchProviderController(k.data.PivotCollection.CollectionSource), k.CreateFacetList(), k.CreateViews(), k.AttachEventHandlers(), e(".pv-loading").remove(), k.FilterFacets(k.data.PivotCollection.Items.map(function (e) {
                return e.Id
            })), k.ApplyViewerState(), g.View != null ? k.SelectView(g.View, !0) : k.SelectView(0, !0), e.publish("/PivotViewer/TileController/Animate", null)
        }, InitPreloader: function () {
            var e = {
                baseContentPath: k.options.BaseContentPath,
                top: t / 2 - 33,
                left: n / 2 - 43
            }, r = ich.pv_template_loader(e);
            y.append(r)
        }, GetItemAdornerContents: function (e, t) {
            var n = "";
            if (t) {
                var r = {
                    Collection: {
                        CollectionName: k.data.PivotCollection.CollectionName,
                        BrandImage: k.data.PivotCollection.BrandImage,
                        ImageBase: k.data.PivotCollection.ImageBase
                    }, Item: e
                };
                n = ich[t](r)
            }
            return n == t && (n = null), n
        }, CreateFacetList: function () {
            for (var t = 0; t < k.data.PivotCollection.Items.length; t++) {
                var n = k.data.PivotCollection.Items[t];
                for (var r = 0; r < k.data.PivotCollection.FacetCategories.length; r++) {
                    var s = k.data.PivotCollection.FacetCategories[r];
                    if (s.IsWordWheelVisible) {
                        var u = n.FindFacetByName(s.Name);
                        if (u)for (var a = 0; a < u.length; a++)s.Type == PivotViewer.Models.FacetType.String && o.push({
                            Facet: s.Name,
                            Value: u[a].Value
                        })
                    }
                }
            }
            k.options.AllowItemsCheck && i.push({
                itemId: "pv-facet-item-Item-Checked__Yes",
                itemValue: "Yes",
                facet: "Item Checked",
                count: 0
            }), T._filterPanel.hide();
            var f = {categories: [], baseContentPath: k.options.BaseContentPath};
            for (var t = 0; t < k.data.PivotCollection.FacetCategories.length; t++) {
                var l = k.data.PivotCollection.FacetCategories[t];
                if (l.IsFilterVisible && l.Type != PivotViewer.Models.FacetType.Link && l.Type != PivotViewer.Models.FacetType.LongString) {
                    var c = {
                        name: l.Name,
                        nameEscaped: PivotViewer.Utils.EscapeItemId(l.Name),
                        escapedItemFacetName: PivotViewer.Utils.Facets.EscapeItemName(l.Name),
                        type: l.Type
                    };
                    l.CustomSort && N.Types[l.Type].AddCustomSort(l.Name, l.CustomSort), f.categories.push(c)
                }
            }
            var h = ich.pv_template_filterpanel_facetheader(f);
            T._filterPanelAccordion.append(h), T._filterPanel.show(), T._filterPanelAccordion.accordion({heightStyle: "fill"}), T.SetFilterPanelHeight();
            var p = ich.pv_template_toolbar_sort(f);
            e(".pv-toolbarpanel-sortcontrols").append(p)
        }, CreateViews: function () {
            var t = e(".pv-viewpanel"), i = n, s = T.MainPanelDimensions().height, o = T.FilterPanelDimensions().width + 18, u = 4;
            r.push(new PivotViewer.Views.GridView), r.push(new PivotViewer.Views.GraphView);
            var a = PivotViewer.Utils.GetInstancesOfType(window.PivotViewer.Views, PivotViewer.Views.IPivotViewerView, ["GridView", "GraphView", "TileBasedView", "IPivotViewerView"]);
            for (var f = 0; f < a.length; f++)r.push(new a[f]);
            for (var f = 0; f < r.length; f++)try {
                if (r[f]instanceof PivotViewer.Views.IPivotViewerView) {
                    r[f].Setup(i, s, o, u, c.GetTileRaio(), k.options.Options);
                    var l = {
                        viewIndex: f,
                        viewName: r[f].GetViewName(),
                        buttonPath: k.options.BaseContentPath + r[f].GetButtonImage()
                    }, h = ich.pv_template_viewpanel_view(l), p = ich.pv_template_toolbar_viewcontrols(l);
                    h.append(r[f].GetUI()), t.prepend(h), e(".pv-toolbarpanel-viewcontrols").append(p)
                } else Debug.Alert("View does not inherit from PivotViewer.Views.IPivotViewerView")
            } catch (d) {
                Debug.Alert(d.Message)
            }
        }, SelectView: function (t, n) {
            for (var i = 0; i < r.length; i++)t != i && (e("#pv-viewpanel-view-" + i + "-image").attr("src", k.options.BaseContentPath + r[i].GetButtonImage()), r[i].Deactivate(), r[i].initialise = !1);
            e("#pv-viewpanel-view-" + t + "-image").attr("src", k.options.BaseContentPath + r[t].GetButtonImageSelected()), r[t].Activate(), r[t].initialise = n, a = t, k.FilterCollection()
        }, FilterCollection: function () {
            s = [];
            var t = [], n = [], i = e(".pv-toolbarpanel-sort option:selected").text();
            e(".pv-filterpanel-clearall").css("visibility", "hidden"), e(".pv-filterpanel-accordion-heading-clear").css("visibility", "hidden"), e(".pv-viewpanel-view").hide(), e("#pv-viewpanel-view-" + a).show(), s = null;
            for (var o in N.Types) {
                var u = N.Types[o].GetSelectedItems(k.data.PivotCollection.Items);
                s ? s = PivotViewer.Utils.ArrayIntesect(s, u) : s = u
            }
            s.length != k.data.PivotCollection.Items.length && e(".pv-filterpanel-clearall").css("visibility", "visible"), k.FilterFacets(s, n);
            var f = [];
            for (var p = 0; p < k.data.PivotCollection.FacetCategories.length; p++) {
                var d = k.data.PivotCollection.FacetCategories[p];
                if (N.Types[d.Type]) {
                    var v = N.Types[d.Type].ToStringArray(d.Name);
                    v.length > 0 && f.push({facet: d.Name, values: v})
                }
            }
            T.UpdateBreadcrumbNavigation(f), c.SetCircularEasingBoth(), r[a].Filter(l, s, "", i), e.publish("/PivotViewer/Views/Item/Deselected", null), T.DeselectInfoPanel(), e(".pv-toolbarpanel-count").html(s.length), h.reset()
        }, FilterFacets: function (t) {
            var n = [];
            for (var r = t.length - 1; r > -1; r -= 1)n.push(k.data.PivotCollection.GetItemById(t[r]));
            for (var r = 0; r < k.data.PivotCollection.FacetCategories.length; r++) {
                var i = k.data.PivotCollection.FacetCategories[r];
                N.Types[i.Type] && e.inArray(i.Name, f) < 0 && N.Types[i.Type].FilterFacet(i.Name, n)
            }
        }, ApplyViewerState: function () {
            g.Facet != null && e(".pv-toolbarpanel-sort").val(g.Facet).attr("selected", "selected");
            for (var t = 0, n = g.Filters.length; t < n; t++) {
                var r = g.Filters[t];
                for (var i = 0, s = r.Predicates.length; i < s; i++) {
                    var o = r.Predicates[i], u = o.Operator;
                    if (u == "GT" || u == "GE" || u == "LT" || u == "LE") {
                        var a = e("#pv-filterpanel-numericslider-" + PivotViewer.Utils.EscapeItemId(r.Facet)), f = parseFloat(o.Value);
                        switch (u) {
                            case"GT":
                                a.val([0, f + 1]);
                                break;
                            case"GE":
                                a.val([0, f]);
                                break;
                            case"LT":
                                a.val([1, f - 1]);
                                break;
                            case"LE":
                                a.val([1, f])
                        }
                        a.parent().find(".pv-filterpanel-numericslider-range-val").text(a.slider("values", 0) + " - " + a.slider("values", 1)), a.parent().parent().prev().find(".pv-filterpanel-accordion-heading-clear").css("visibility", "visible")
                    } else u == "EQ" ? k.SelectStringFacetItem(r.Facet, o.Value) : u == "NT" && k.SelectStringFacetItem(r.Facet, x)
                }
            }
        }, GetItem: function (e) {
            for (var t = 0; t < k.data.PivotCollection.Items.length; t++)if (k.data.PivotCollection.Items[t].Id == e)return k.data.PivotCollection.Items[t];
            return null
        }, SelectStringFacetItem: function (t, n, r) {
            if (t == "ITEMHREF") {
                for (var i = 0; i < c._tiles.length; i++)if (c._tiles[i].facetItem.Href == n) {
                    e.publish("/PivotViewer/Views/Canvas/Click", [{
                        x: c._tiles[i].Location[0].x + 1,
                        y: c._tiles[i].Location[0].y + 1
                    }]);
                    break
                }
                e(".pv-filterpanel-clearall").css("visibility", "visible"), r(!1)
            } else {
                var s = PivotViewer.Utils.Facets.EscapeItemName(t), o = PivotViewer.Utils.Facets.EscapeItemValue(n), u = PivotViewer.Utils.EscapeMetaChars(s), a = PivotViewer.Utils.EscapeMetaChars(o), f = e('.pv-facet-facetitem[itemfacet="' + u + '"][itemvalue="' + a + '"]');
                f.attr("checked", "checked"), e("#pv-cat-heading-" + u + " > .pv-filterpanel-accordion-heading-clear").css("visibility", "visible"), r(!0)
            }
        }, GetDistance: function (e, t) {
            var n = e.pageX, r = t.pageX, i = e.pageY, s = t.pageY;
            return Math.sqrt((r - n) * (r - n) + (s - i) * (s - i))
        }, ViewMouseWheel: function (e, t) {
            c.SetQuarticEasingOut(), c.DrawHelpers([{x: e.x, y: e.y}]);
            var n = t > 0 ? h.scale / .7 : h.scale * .7;
            n = n < 1 ? 1 : n, h.zoom(e.x, e.y, n), n = h.scale;
            var r = n == 1 ? 0 : Math.ceil(n / h.maxScale * 100);
            r = r > 100 ? 100 : r, p.val(r)
        }, ViewMouseMove: function (t) {
            h.mouseX = t.mouseX, h.mouseY = t.mouseY, d == null ? Modernizr.touch != undefined && !Modernizr.touch && e.publish("/PivotViewer/Views/Canvas/Hover", [t]) : (h.offset(t.x - d.x, t.y - d.y), v = !0, d = t, e.publish("/PivotViewer/Views/Canvas/Drag", [h]))
        }, ViewMouseUp: function (t) {
            v ? e.publish("/PivotViewer/Views/Canvas/Drag/End", [t]) : m == null || PivotViewer.Utils.Now() - m < 500 || !k.options.AllowItemsCheck ? e.publish("/PivotViewer/Views/Canvas/Click", [t]) : e.publish("/PivotViewer/Views/Canvas/ClickLong", [t]), m = 0
        }, ViewTouchStart: function (t, n) {
            var r = n.originalEvent, i = e(t).offset(), s = r.touches[0].pageX - i.left, o = r.touches[0].pageY - i.top;
            d = {x: s, y: o, initX: s, initY: o}, m = PivotViewer.Utils.Now()
        }, ViewTouchMove: function (t, n) {
            try {
                var r = n.originalEvent;
                n.preventDefault();
                if (r.touches.length > 1) {
                    n.preventDefault();
                    if (w == null) {
                        w = k.GetDistance(r.touches[0], r.touches[1]);
                        return
                    }
                    var i = 1e7, s = 1e7, o = 0, u = 0, a = [];
                    for (var f = 0; f < r.touches.length; f++)a.push({
                        x: r.touches[f].pageX,
                        y: r.touches[f].pageY
                    }), r.touches[f].pageX < i && (i = r.touches[f].pageX), r.touches[f].pageX > o && (o = r.touches[f].pageX), r.touches[f].pageY < s && (s = r.touches[f].pageY), r.touches[f].pageY > u && (u = r.touches[f].pageY);
                    var l = (i + o) / 2, m = (s + u) / 2;
                    c.SetLinearEasingBoth();
                    var g = k.GetDistance(r.touches[0], r.touches[1]);
                    S = g / w * E, S = S < 1 ? 1 : S, S = S > h.maxScale ? h.maxScale : S, a.push({
                        x: l,
                        y: m
                    }), c.DrawHelpers(a), c.DrawHelperText("Scale: " + S), h.zoom(l, m, S);
                    var y = S == 1 ? 0 : Math.ceil(S / h.maxScale * 100);
                    y = y > 100 ? 100 : y, p.val(y);
                    return
                }
                var b = e(t).offset(), x = r.touches[0].pageX - b.left, T = r.touches[0].pageY - b.top;
                h.offset(x - d.x, T - d.y), v = !0, d.x = x, d.y = T, e.publish("/PivotViewer/Views/Canvas/Drag", [h])
            } catch (N) {
                Debug.Log(N.message)
            }
        }, ViewTouchEnd: function (e, t) {
            if (v) {
                var n = k.GetDistance({pageX: d.x, pageY: d.y}, {pageX: d.initX, pageY: d.initY});
                n <= k.options.DragClickThreshold && (v = !1)
            }
            k.ViewMouseUp({x: d.x, y: d.y}), d = null, v = !1, w = null, E = S, m = 0;
            return
        }, AttachEventHandlers: function () {
            var t = e(".pv-viewarea-canvas"), n = e(".pv-itemadorner"), r = e(".pv-itemselect");
            e(window).resize(PivotViewer.Utils.Throttle(function () {
                var t = y.parent()[0].nodeName != "BODY" ? y.parent().height() : e(this).height();
                T.Resize(y.width(), t)
            }, 250)), e(".pv-toolbarpanel-view").on("click", function (e) {
                var t = this.id.substring(this.id.lastIndexOf("-") + 1, this.id.length);
                t != null && k.SelectView(parseInt(t), !1)
            }), e(".pv-toolbarpanel-sort").on("change", function (e) {
                k.FilterCollection()
            }), e(".pv-zoomslider-buttons").on("click", "img", function (e) {
                var t = this.src, n = p.val();
                t.indexOf("plus.png") >= 0 ? n += 10 : n -= 10, p.trigger("updatevalue", {value: n})
            }), e(".pv-filterpanel-clearall").on("click", function (t) {
                for (var n = 0; n < k.data.PivotCollection.FacetCategories.length; n++) {
                    var r = k.data.PivotCollection.FacetCategories[n];
                    N.Types[r.Type] && N.Types[r.Type].ClearSelected(r.Name)
                }
                e(".pv-filterpanel-search").val("").removeClass("search-value"), e(".pv-filterpanel-accordion-heading-clear").css("visibility", "hidden"), f = [], k.FilterCollection()
            }), e(".pv-filterpanel-accordion-heading-clear").on("click", function (t) {
                var n = this.attributes.facetType.value, r = PivotViewer.Utils.Facets.UnescapeItemName(this.attributes.facetName.value);
                N.Types[n].ClearSelected(r);
                var i = e.inArray(r, f);
                i >= 0 && f.splice(i, 1), k.FilterCollection(), e(this).css("visibility", "hidden")
            }), T._infoPanel.on("click", ".detail-item-value-filter", function (t) {
                return e.publish("/PivotViewer/Views/Item/Filtered", [{
                    Facet: e(this).parent().children().first().text(),
                    Items: [e(this).text()]
                }]), !1
            }), T._infoPanel.on("click", ".pv-infopanel-detail-description-more", function (t) {
                var n = e(this), r = e(this).prev();
                n.text() == "More" ? (r.css("height", ""), e(this).text("Less")) : (r.css("height", "100px"), e(this).text("More"))
            }), T._infoPanel.on("click", ".pv-infopanel-controls-navleft", function (t) {
                e.publish("/PivotViewer/Views/Item/Previous", null)
            }), T._infoPanel.on("click", ".pv-infopanel-controls-navright", function (t) {
                e.publish("/PivotViewer/Views/Item/Next", null)
            }), e(".pv-filterpanel-search").on("keyup", function (t) {
                var n = !1, r = [], i = e(".pv-filterpanel-search-autocomplete"), s = t.target.value;
                i.empty();
                if (t.keyCode == 27) {
                    e(t.target).blur();
                    return
                }
                e(t.target).removeClass("search-value");
                var u = new RegExp("(" + s + ")", "gi");
                for (var a in C.Providers)C.Providers[a].Search(s, function (t) {
                    var n = i.find(".pv-filterpanel-search-result").get();
                    i.empty();
                    var r = new RegExp("<ddd/>", "gi"), s = new RegExp("c0", "gi"), o = [];
                    for (var a = 0; a < t.length; a++) {
                        var f = t[a].title.replace(u, '<span class="pv-filterpanel-search-searchterm">$1</span>'), l = t[a].description.replace(s, "strong").replace(r, "...");
                        o.push('<div class="pv-filterpanel-search-result" facet="ITEMHREF" facetValue="' + t[a].id + '"><div class="pv-filterpanel-search-result-title">' + f + '</div><div class="pv-filterpanel-search-result-description">' + l + "</div></div>")
                    }
                    for (var a = 0; a < n.length; a++)o.push(n[a]);
                    o.sort(function (t, n) {
                        var r = e(t).find(".pv-filterpanel-search-result-title").text(), i = e(n).find(".pv-filterpanel-search-result-title").text();
                        return r < i ? -1 : r > i ? 1 : 0
                    }), i.append(o)
                });
                var f = [];
                for (var l = 0, c = o.length; l < c; l++) {
                    var h = o[l].Value.toLowerCase();
                    if (h.indexOf(s.toLowerCase()) >= 0 && e.inArray(h, r) == -1) {
                        r.push(h);
                        var p = o[l].Value.replace(u, '<span class="pv-filterpanel-search-searchterm">$1</span>');
                        f.push('<div class="pv-filterpanel-search-result" facet="' + o[l].Facet + '" facetValue="' + o[l].Value + '"><div class="pv-filterpanel-search-result-title">' + p + "</div></div>"), t.keyCode == 13 && (k.SelectStringFacetItem(o[l].Facet, o[l].Value), n = !0)
                    }
                }
                f.sort(function (t, n) {
                    var r = e(t).find(".pv-filterpanel-search-result-title").text(), i = e(n).find(".pv-filterpanel-search-result-title").text();
                    return r < i ? -1 : r > i ? 1 : 0
                }), i.append(f), r.length > 0 && i.show(), n && k.FilterCollection()
            }), e(".pv-filterpanel-search").on("blur", function (t) {
                e(".pv-filterpanel-search-autocomplete").hide()
            }), e(".pv-filterpanel-search-autocomplete").on("mousedown", ".pv-filterpanel-search-result", function (t) {
                t.preventDefault();
                var n = e(t.target), r = n.parentsUntil(".pv-filterpanel-search-result"), i = e(".pv-filterpanel-search");
                r.length == 0 ? r = n.parent() : r = r.parent(), i.val(r.attr("facetValue")).toggleClass("search-value").blur(), e(".pv-filterpanel-search-autocomplete").hide(), k.SelectStringFacetItem(r.attr("facet"), r.attr("facetValue"), function (e) {
                    e && k.FilterCollection()
                })
            }), t.on("mousedown", function (t) {
                if (Modernizr.touch)return;
                var n = e(this).offset(), r = t.clientX - n.left, i = t.clientY - n.top;
                d = {x: r, y: i, initX: r, initY: i}, m = PivotViewer.Utils.Now()
            }), t.on("mouseup", PivotViewer.Utils.PreventMultipleThrottle(function (t) {
                if (Modernizr.touch)k.ViewTouchEnd(this, t); else {
                    var n = e(this).offset(), r = t.clientX - n.left, i = t.clientY - n.top;
                    k.ViewMouseUp({x: r, y: i})
                }
            }, function () {
                d = null, v = !1
            }, 250)), t.on("mouseout", function (e) {
                d = null, v = !1
            }), t.on("mousemove", function (t) {
                if (Modernizr.touch)return;
                if (h.mouseX != t.clientX && h.mouseY != t.clientY) {
                    var n = e(this).offset(), r = t.clientX - n.left, i = t.clientY - n.top;
                    k.ViewMouseMove({x: r, y: i, mouseX: t.clientX, mouseY: t.clientY})
                }
            }), t.on("mousewheel", function (t, n) {
                var r = e(this).offset(), i = t.clientX - r.left, s = t.clientY - r.top;
                k.ViewMouseWheel({x: i, y: s}, n)
            }), t.on("touchstart", function (e) {
                k.ViewTouchStart(this, e)
            }), t.on("touchmove", function (e) {
                k.ViewTouchMove(this, e)
            }), t.on("touchend", function (e) {
                k.ViewTouchEnd(this, e)
            }), t.on("contextmenu", function (e) {
                return !1
            }), n.on("mousewheel", function (e, n) {
                var r = t.offset(), i = e.clientX - r.left, s = e.clientY - r.top;
                k.ViewMouseWheel({x: i, y: s}, n)
            }), n.on("contextmenu", function (e) {
                return !1
            }), n.on("mousedown", function (e) {
                if (e.target != this)return;
                var n = t.offset(), r = e.clientX - n.left, i = e.clientY - n.top;
                d = {x: r, y: i, initX: r, initY: i}, Modernizr.touch || (m = PivotViewer.Utils.Now())
            }), n.on("mousemove", function (e) {
                if (e.target != this)return;
                var n = t.offset(), r = e.clientX - n.left, i = e.clientY - n.top;
                k.ViewMouseMove({x: r, y: i, mouseX: e.clientX, mouseY: e.clientY})
            }), n.on("mouseup", PivotViewer.Utils.PreventMultipleThrottle(function (e) {
                if (e.target != this)return;
                var n = e.button === 0 ? !1 : !0, r = t.offset(), i = e.clientX - r.left, s = e.clientY - r.top;
                k.ViewMouseUp({x: i, y: s, context: n})
            }, function () {
                d = null, v = !1
            }, 250)), r.on("mousewheel", function (e, n) {
                var r = t.offset(), i = e.clientX - r.left, s = e.clientY - r.top;
                k.ViewMouseWheel({x: i, y: s}, n)
            }), r.on("contextmenu", function (e) {
                return !1
            }), r.on("mousedown", function (e) {
                if (e.target != this)return;
                var n = t.offset(), r = e.clientX - n.left, i = e.clientY - n.top;
                d = {x: r, y: i, initX: r, initY: i}, Modernizr.touch || (m = PivotViewer.Utils.Now())
            }), r.on("mousemove", function (e) {
                var n = t.offset(), r = e.clientX - n.left, i = e.clientY - n.top;
                k.ViewMouseMove({x: r, y: i, mouseX: e.clientX, mouseY: e.clientY})
            }), r.on("mouseup", PivotViewer.Utils.PreventMultipleThrottle(function (e) {
                if (e.target != this)return;
                var n = e.button === 0 ? !1 : !0, r = t.offset(), i = e.clientX - r.left, s = e.clientY - r.top;
                k.ViewMouseUp({x: i, y: s, context: n})
            }, function () {
                d = null, v = !1
            }, 250)), r.on("touchstart", function (e) {
                k.ViewTouchStart(this, e)
            }), r.on("touchmove", function (e) {
                k.ViewTouchMove(this, e)
            }), r.on("touchend", function (e) {
                k.ViewTouchEnd(this, e)
            }), T._filterPanel.on("mouseup", ".pv-filterpanel-export", function (t) {
                var n = "", r = [];
                for (var i = 0; i < k.data.PivotCollection.FacetCategories.length; i++)r.push(k.data.PivotCollection.FacetCategories[i].Name);
                n += "<tr>", n += "<td>" + r.join("</td><td>") + "</td>", n += "</tr>";
                for (var o = 0; o < k.data.PivotCollection.Items.length; o++) {
                    var u = k.data.PivotCollection.Items[o];
                    if (e.inArray(u.Id, s) === -1)continue;
                    n += "<tr>";
                    for (var i = 0; i < r.length; i++) {
                        var a = "", f = u.FindFacetByName(r[i]);
                        if (f)for (var l = 0; l < f.length; l++)typeof f[l].Value != "undefined" && (a += f[l].Value.toString()), f[l].Href && (a += "[" + f[l].Href + "]"), f.length > 1 && l < f.length - 1 && (a += "||");
                        n += "<td>" + a + "</td>"
                    }
                    n += "</tr>"
                }
                var c = "<html><head><title>Export: " + k.data.PivotCollection.CollectionName + "</title></head><body><table>" + n + "</table></body></html>", h = window.open("", "_blank");
                h.document.write(c), h.document.close()
            })
        }, show: function () {
            Debug.Log("Show")
        }, hide: function () {
            Debug.Log("Hide")
        }
    };
    e.subscribe("/PivotViewer/Template/Loaded", function (e) {
        ich.grabTemplates(), k.InitPreloader(), k.options.Loader.LoadCollection(k.data.PivotCollection)
    }), e.subscribe("/PivotViewer/Models/Collection/Loaded", function (e) {
        k.InitUI()
    }), e.subscribe("/PivotViewer/ImageController/Collection/Loaded", function (e) {
        k.InitPivotViewer()
    }), e.subscribe("/PivotViewer/UI/Loaded", function (e) {
        k.options.CopyToClipboard && !Modernizr.touch && T.ClipboardExport(!0), k.InitTileCollection()
    }), e.subscribe("/PivotViewer/Views/Item/Hover", function (e) {
        if (e == undefined || !e) {
            T.SetItemAdorner(null, null);
            return
        }
        T.SetItemAdorner(e.location, k.GetItemAdornerContents(e.item, k.options.ItemAdornerTemplate))
    }), e.subscribe("/PivotViewer/Views/Item/Selected", function (t) {
        if (!t || t.item == undefined || t.item == null) {
            T.DeselectInfoPanel(), T.SetItemSelect(null);
            return
        }
        var n = k.GetItem(t.item);
        if (n != null) {
            T._infoPanel.empty();
            var r = !0, i = {
                baseContentPath: k.options.BaseContentPath,
                title: n.Name,
                description: n.Description,
                values: [],
                item: {Img: n.Img, Id: n.Id, Href: n.Href, Name: n.Name, Description: n.Description}
            };
            for (var s = 0, o = k.data.PivotCollection.FacetCategories.length; s < o; s++)if (k.data.PivotCollection.FacetCategories[s].IsMetaDataVisible) {
                var u = n.FindFacetByName(k.data.PivotCollection.FacetCategories[s].Name);
                if (u != undefined || u != null) {
                    var a = {alternate: r, name: k.data.PivotCollection.FacetCategories[s].Name, facetValues: []};
                    for (var f = 0; f < u.length; f++) {
                        var l = {isFilterVisible: k.data.PivotCollection.FacetCategories[s].IsFilterVisible};
                        u[f].Href != null ? (l.value = u[f].Value, l.href = u[f].Href) : k.data.PivotCollection.FacetCategories[s].Type == PivotViewer.Models.FacetType.DateTime ? l.value = PivotViewer.Utils.FormatDate(u[f].Value, "yyyy-MM-dd") : l.value = u[f].Value, a.facetValues.push(l)
                    }
                    i.values.push(a), r = !r
                }
            }
            var c = ich.pv_template_infopanel_details(i);
            T._infoPanel.append(c);
            if (ich.pv_template_infopanel_toolbar) {
                var h = ich.pv_template_infopanel_toolbar(i);
                e(".pv-infopanel-toolbar").append(h)
            }
            T._infoPanel.fadeIn();
            var p = e(".pv-infopanel-toolbar").outerHeight(!0) + e(".pv-infopanel-controls").outerHeight(!0) + e(".pv-infopanel-heading").outerHeight(!0) + 15;
            e(".pv-infopanel-details").css("height", T._infoPanel.height() - p + "px"), T.SetItemSelect(t.location, k.GetItemAdornerContents(n, k.options.ItemSelectedTemplate))
        }
    }), e.subscribe("/PivotViewer/Views/Item/Filtered", function (t) {
        if (t == undefined || t == null)return;
        var n = e("#pv-cat-" + PivotViewer.Utils.EscapeMetaChars(PivotViewer.Utils.EscapeItemId(t.Facet)) + " input");
        n.removeAttr("checked");
        var r = k.data.PivotCollection.GetFacetCategoryByName(PivotViewer.Utils.Facets.UnescapeItemName(t.Facet));
        if (r.Type == PivotViewer.Models.FacetType.Number)slider = e("#pv-cat-" + PivotViewer.Utils.EscapeMetaChars(PivotViewer.Utils.EscapeItemId(t.Facet))).find(".pv-filterpanel-numericslider"), slider.slider("values", [t.Items[0], t.Items[t.Items.length - 1]]), slider.trigger("updatevalue", {values: [t.Items[0], t.Items[t.Items.length - 1]]}); else for (var i = 0, s = t.Items.length; i < s; i++) {
            var o = e("#" + PivotViewer.Utils.EscapeMetaChars(PivotViewer.Utils.Facets.CreateItemId(t.Facet, t.Items[i].toString())) + " input");
            if (o.length > 0)o.attr("checked", "checked"); else if (r.Type == PivotViewer.Models.FacetType.DateTime) {
                var u = t.Items[i].split("-");
                u.length == 3 && (o = e("#" + PivotViewer.Utils.EscapeMetaChars(PivotViewer.Utils.Facets.CreateItemId(t.Facet, "CustomDate")) + " input"), o.attr("daterangestart", t.Items[i]), o.attr("daterangeend", t.Items[i]), o.attr("checked", "checked"))
            }
            e.publish("/PivotViewer/Collection/Filter", [{facet: t.Facet}])
        }
    }), e.subscribe("/PivotViewer/Collection/Filter", function (e) {
        f.push(e.facet), k.FilterCollection()
    }), e.subscribe("/PivotViewer/Views/Item/Checked", function (t) {
        if (t == undefined || t == null)return;
        e.inArray(t, u) < 0 && u.push(t);
        var n = k.GetItem(t);
        if (n != null) {
            var r = n.FindFacetByName("Item Checked");
            r != undefined && r.length == 1 && (r[0].Value = !0)
        }
        var i = [];
        for (var s = 0, o = k.data.PivotCollection.Items.length; s < o; s++)i.push(k.data.PivotCollection.Items[s].Id);
        k.FilterFacets(i, [])
    }), e.subscribe("/PivotViewer/Views/Item/Unchecked", function (t) {
        if (t == undefined || t == null)return;
        var n = e.inArray(t, u);
        n >= 0 && u.splice(n, 1);
        var r = k.GetItem(t);
        if (r != null) {
            var i = r.FindFacetByName("Item Checked");
            i != undefined && i.length == 1 && (i[0].Value = !1)
        }
        var s = [];
        for (var o = 0, a = k.data.PivotCollection.Items.length; o < a; o++)s.push(k.data.PivotCollection.Items[o].Id);
        k.FilterFacets(s, [])
    }), e.fn.PivotViewer = function (e) {
        if (typeof e == "object" || !e)return k.init.apply(this, arguments);
        throw"The required parameters were not set."
    }, e.fn.PivotViewer.GetCollection = function () {
        return e.extend({}, k.data.PivotCollection)
    }, e.fn.PivotViewer.GetItem = function (e) {
        return k.GetItem(e)
    }, e.fn.PivotViewer.GetItemsWithValue = function (e, t) {
        var n = [];
        for (var r = 0, i = k.data.PivotCollection.Items.length; r < i; r++) {
            var s = k.data.PivotCollection.Items[r].Facets[e];
            if (s)for (var o = 0; o < s.length; o++)s[o].Value == t && n.push(k.data.PivotCollection.Items[r].Id)
        }
        return n
    }, e.fn.PivotViewer.RefreshFilter = function (e) {
        var t = [];
        for (var n = 0, r = k.data.PivotCollection.Items.length; n < r; n++)t.push(k.data.PivotCollection.Items[n].Id);
        k.FilterFacets(t, [])
    }
}(jQuery);
